{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar INITIAL_STATE = {\n  sharedDevices: null\n};\nexport var getSharedDevicesReducer = function getSharedDevicesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_SHARED_DEVICES':\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/redux/Reducer/getSharedDevicesReducer.js"],"names":["INITIAL_STATE","sharedDevices","getSharedDevicesReducer","state","action","type","payload"],"mappings":";;;;;;AACA,IAAMA,aAAa,GAAG;AAElBC,EAAAA,aAAa,EAAE;AAFG,CAAtB;AAKE,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,aAA0B;AAAA,MAAXI,MAAW;;AAEtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AAEE,6CAAYF,KAAZ,GAAqBC,MAAM,CAACE,OAA5B;;AACA;AACG,aAAOH,KAAP;AALP;AAOH,CATM","sourcesContent":["\nconst INITIAL_STATE = {\n  \n    sharedDevices: null\n  }\n  \n  export const getSharedDevicesReducer = (state = INITIAL_STATE, action) => {\n    \n      switch (action.type) {\n        case 'SET_SHARED_DEVICES':\n        \n          return { ...state,...action.payload};\n          default:\n             return state\n      }\n  }\n      "]},"metadata":{},"sourceType":"module"}