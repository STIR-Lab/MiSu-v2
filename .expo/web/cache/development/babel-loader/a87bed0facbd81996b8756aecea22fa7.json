{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getDevices } from \"../../services/listDevice\";\n\nvar setDevices = function setDevices(type, data, success) {\n  return {\n    type: type,\n    payload: _objectSpread(_objectSpread({}, data), {}, {\n      success: success\n    })\n  };\n};\n\nexport var listDevicesAction = function listDevicesAction(idToken) {\n  return function _callee(dispatch) {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getDevices(idToken));\n\n          case 3:\n            data = _context.sent;\n            dispatch(setDevices('SET_DEVICES', {\n              devices: data\n            }, true));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch(setDevices('UNSET_DEVICES', null, false));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/redux/Action/listDevicesAction.js"],"names":["getDevices","setDevices","type","data","success","payload","listDevicesAction","idToken","dispatch","devices"],"mappings":";;;;;;;AACA,SAASA,UAAT;;AAGA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb;AAAA,SAA0B;AAC1CF,IAAAA,IAAI,EAAJA,IAD0C;AAE1CG,IAAAA,OAAO,kCAAOF,IAAP;AAAaC,MAAAA,OAAO,EAAPA;AAAb;AAFmC,GAA1B;AAAA,CAApB;;AAMA,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,OAAD,EAAa;AAC5C,SAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEuBR,UAAU,CAACO,OAAD,CAFjC;;AAAA;AAESJ,YAAAA,IAFT;AAGGK,YAAAA,QAAQ,CAAEP,UAAU,CAAC,aAAD,EAAe;AAACQ,cAAAA,OAAO,EAAEN;AAAV,aAAf,EAA+B,IAA/B,CAAZ,CAAR;AAHH;AAAA;;AAAA;AAAA;AAAA;AAKGK,YAAAA,QAAQ,CAAEP,UAAU,CAAC,eAAD,EAAiB,IAAjB,EAAsB,KAAtB,CAAZ,CAAR;;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQD,CATM","sourcesContent":["\nimport { getDevices } from '../../services/listDevice'\n\n\nconst setDevices =  (type, data, success) => ({\n    type,\n    payload: { ...data ,success}\n})\n\n\nexport const listDevicesAction = (idToken) => { \n  return async (dispatch) => {\n        try {   \n            const data  = await getDevices(idToken)\n            dispatch( setDevices('SET_DEVICES',{devices: data},true))\n        } catch (error) {\n            dispatch( setDevices('UNSET_DEVICES',null,false))\n        }\n    }  \n}"]},"metadata":{},"sourceType":"module"}