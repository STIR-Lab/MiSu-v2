{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Application/HubScreen.js\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { connect } from 'react-redux';\nimport { getHubInfoAction } from \"../../redux/Action/getHubInfoAction\";\nimport { registerHubAction } from \"../../redux/Action/registerHubAction\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nvar windowHeight = Dimensions.get('window').height;\n\nfunction HubScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      url = _useState2[0],\n      setUrl = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var handleClick = function handleClick() {\n    if (url == '' || url == null || email == '' || email == null || password == '' || password == null) {\n      setError('Some fields have not been completed');\n      return;\n    } else {\n      var state = props.register({\n        hub_url: url,\n        hub_email: email,\n        hub_password: password\n      }, props.sessionData.idToken);\n      setError('It probably worked..');\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Register Your Hub\"), React.createElement(View, {\n    style: style.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: style.input,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(e) {\n      return setUrl(e);\n    },\n    value: url,\n    placeholder: \"Hub URL\",\n    placeholderTextColor: \"#808080\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: style.input,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(e) {\n      return setEmail(e);\n    },\n    value: email,\n    placeholder: \"Hub Email\",\n    placeholderTextColor: \"#808080\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: style.input,\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(e) {\n      return setPassword(e);\n    },\n    value: password,\n    placeholder: \"Hub Password\",\n    placeholderTextColor: \"#808080\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: style.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, error)), React.createElement(TouchableOpacity, {\n    style: style.button,\n    onPress: function onPress() {\n      return handleClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Add Hub\"))));\n}\n\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: 12.5,\n    alignItems: 'center',\n    alignSelf: \"stretch\",\n    backgroundColor: \"white\"\n  },\n  button: {\n    backgroundColor: \"#008CFF\",\n    width: 158,\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10\n  },\n  error: {\n    color: \"red\"\n  },\n  form: {\n    marginTop: 60,\n    height: windowHeight * .38,\n    width: \"100%\",\n    paddingHorizontal: 25\n  },\n  input: {\n    backgroundColor: \"#F8F8F8\",\n    borderColor: \"#9A9A9A\",\n    borderWidth: 0.5,\n    elevation: 10,\n    borderRadius: 10,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginVertical: 10\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var hubInfoData = state.hubInfoData,\n      sessionData = state.sessionData,\n      sharedAccountsData = state.sharedAccountsData,\n      registerData = state.registerData;\n  return {\n    hubInfoData: hubInfoData,\n    sessionData: sessionData,\n    sharedAccountsData: sharedAccountsData,\n    registerData: registerData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    register: function register(data, idToken) {\n      return dispatch(registerHubAction(data, idToken));\n    },\n    getHub: function getHub(idToken) {\n      return dispatch(getHubInfoAction(idToken));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HubScreen);","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Application/HubScreen.js"],"names":["React","useState","connect","getHubInfoAction","registerHubAction","KeyboardAwareScrollView","windowHeight","Dimensions","get","height","HubScreen","props","url","setUrl","email","setEmail","password","setPassword","error","setError","handleClick","state","register","hub_url","hub_email","hub_password","sessionData","idToken","Keyboard","dismiss","style","container","form","input","e","button","color","StyleSheet","create","flex","paddingVertical","alignItems","alignSelf","backgroundColor","width","justifyContent","borderRadius","marginTop","paddingHorizontal","borderColor","borderWidth","elevation","marginVertical","mapStateToProps","hubInfoData","sharedAccountsData","registerData","mapDispatchToProps","dispatch","data","getHub"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Image, StyleSheet, TouchableOpacity, View, Text, TextInput, Keyboard, TouchableWithoutFeedback, KeyboardAvoidingView,Dimensions } from 'react-native';\nimport { connect } from 'react-redux';\nimport { getHubInfoAction } from '../../redux/Action/getHubInfoAction';\nimport { registerHubAction } from '../../redux/Action/registerHubAction';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nconst windowHeight = Dimensions.get('window').height;\n\nfunction HubScreen(props) {\n    // console.log(props);\n\n    const [url, setUrl] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [error, setError] = useState(\"\");\n\n    const handleClick = () => {\n        if(url == '' || url == null || email == '' || email == null || password == ''|| password == null)\n        {\n            setError('Some fields have not been completed');\n            return;\n        }\n        else\n        {\n            const state = props.register({\n                hub_url: url, \n                hub_email: email,\n                hub_password: password},\n                props.sessionData.idToken);\n            setError('It probably worked..');\n        }\n    }\n\n    return (\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n            <View style={style.container}>\n                <Text>Register Your Hub</Text>\n                <View style={style.form}>\n                    <TextInput\n                        style={style.input}\n                        autoCapitalize=\"none\"\n                        onChangeText={(e) => setUrl(e)}\n                        value={url}\n                        placeholder=\"Hub URL\"\n                        placeholderTextColor=\"#808080\"    \n                    ></TextInput>\n                    <TextInput\n                        style={style.input}\n                        autoCapitalize=\"none\"\n                        onChangeText={(e) => setEmail(e)}\n                        value={email}\n                        placeholder=\"Hub Email\"\n                        placeholderTextColor=\"#808080\"    \n                    ></TextInput>\n                    <TextInput\n                        style={style.input}\n                        autoCapitalize=\"none\"\n                        secureTextEntry\n                        onChangeText={(e) => setPassword(e)}\n                        value={password}\n                        placeholder=\"Hub Password\"\n                        placeholderTextColor=\"#808080\"    \n                    ></TextInput>\n                    <Text style={style.error}>{error}</Text>\n                </View>\n                <TouchableOpacity style={style.button} onPress={() => handleClick()}>\n                        <Text style={{color: \"white\"}}>Add Hub</Text>\n                </TouchableOpacity>\n            </View>\n        </TouchableWithoutFeedback>\n    );\n}\n\nconst style = StyleSheet.create({\n    container: {\n        flex: 1,\n\t\tpaddingVertical: 12.5,\n\t\talignItems: 'center',\n        alignSelf: \"stretch\",\n        backgroundColor: \"white\"\n    },\n    button :{\n        backgroundColor: \"#008CFF\",\n        width: 158,\n        height: 45,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: 10\n    },\n    error: {\n        color: \"red\"\n    },\n    form: {\n        marginTop: 60,\n        height: windowHeight * .38,\n        width: \"100%\",\n        paddingHorizontal: 25\n    },\n    input: {\n        backgroundColor: \"#F8F8F8\",\n        borderColor: \"#9A9A9A\",\n        borderWidth: 0.5,\n        elevation: 10,\n        borderRadius: 10,\n        paddingHorizontal: 20,\n        paddingVertical: 10,\n        marginVertical: 10\n    }\n  });\n\nconst mapStateToProps = (state) => {\n\tconst { hubInfoData, sessionData, sharedAccountsData, registerData } = state;\n\treturn { hubInfoData, sessionData, sharedAccountsData, registerData };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tregister: (data, idToken) => dispatch(registerHubAction(data, idToken)),\n\t\tgetHub: (idToken) => dispatch(getHubInfoAction(idToken))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HubScreen);"]},"metadata":{},"sourceType":"module"}