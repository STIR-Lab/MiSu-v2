{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Application/DeviceScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { connect } from 'react-redux';\nimport DeviceCard from \"../../components/cards/DeviceCard\";\nimport appStyle from \"../../styles/AppStyle\";\n\nvar DeviceScreen = function (_React$Component) {\n  _inherits(DeviceScreen, _React$Component);\n\n  var _super = _createSuper(DeviceScreen);\n\n  function DeviceScreen(props) {\n    var _this;\n\n    _classCallCheck(this, DeviceScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      device: {}\n    };\n    return _this;\n  }\n\n  _createClass(DeviceScreen, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(\"DeviceScreen Props\", this.props);\n      var device = this.props.route.params.device;\n      this.setState({\n        device: device\n      });\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(props) {\n      if (props.devicesData) {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: appStyle.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        style: appStyle.cardContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }\n      }, React.createElement(ScrollView, {\n        style: appStyle.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, React.createElement(DeviceCard, {\n        device: this.state.device,\n        deviceList: this.props.sharedDevicesData,\n        IdToken: this.props.sessionData.idToken,\n        owner: this.props.route.params.owner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 8\n        }\n      }))));\n    }\n  }]);\n\n  return DeviceScreen;\n}(React.Component);\n\nDeviceScreen.navigationOptions = function (_ref) {\n  var navigate = _ref.navigate,\n      navigation = _ref.navigation;\n  return {\n    headerTitle: navigation.getParam('device', '').name.slice(0, 22),\n    headerLeft: function headerLeft() {\n      return React.createElement(View, {\n        __self: DeviceScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 4\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignSelf: 'center',\n          marginTop: 16\n        },\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        },\n        __self: DeviceScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 5\n        }\n      }, React.createElement(Icon, {\n        name: \"arrow-back\",\n        size: 35,\n        style: {\n          marginLeft: 16,\n          marginBottom: 10\n        },\n        __self: DeviceScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 6\n        }\n      })));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(View, {\n        __self: DeviceScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 22\n        }\n      });\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var devicesData = state.devicesData,\n      sessionData = state.sessionData,\n      sharedDevicesData = state.sharedDevicesData,\n      sharedAccountsData = state.sharedAccountsData;\n  return {\n    devicesData: devicesData,\n    sessionData: sessionData,\n    sharedDevicesData: sharedDevicesData,\n    sharedAccountsData: sharedAccountsData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dosomething: function dosomething() {}\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceScreen);","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Application/DeviceScreen.js"],"names":["React","Icon","connect","DeviceCard","appStyle","DeviceScreen","props","state","device","console","log","route","params","setState","devicesData","container","cardContainer","scrollView","sharedDevicesData","sessionData","idToken","owner","Component","navigationOptions","navigate","navigation","headerTitle","getParam","name","slice","headerLeft","alignSelf","marginTop","marginLeft","marginBottom","headerRight","mapStateToProps","sharedAccountsData","mapDispatchToProps","dispatch","dosomething"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ScrollView, TouchableOpacity, View } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { connect } from 'react-redux';\nimport DeviceCard from '../../components/cards/DeviceCard';\nimport appStyle from '../../styles/AppStyle';\n\nclass DeviceScreen extends React.Component {\n\tstatic navigationOptions = ({ navigate, navigation }) => ({\n\t\theaderTitle: navigation.getParam('device', '').name.slice(0, 22),\n\t\theaderLeft: () => (\n\t\t\t<View>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tstyle={{ alignSelf: 'center', marginTop: 16 }}\n\t\t\t\t\tonPress={() => navigation.navigate('Home')}\n\t\t\t\t>\n\t\t\t\t\t<Icon name=\"arrow-back\" size={35} style={{ marginLeft: 16, marginBottom: 10 }} />\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t),\n\t\theaderRight: () => <View></View>\n\t});\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdevice: {}\n\t\t};\n\t}\n\n\tcomponentWillMount() {\n\t\tconsole.log(\"DeviceScreen Props\", this.props);\n\t\tconst device = this.props.route.params.device;\n\t\t// const device = this.props.navigation.getParam('device', null);\n\t\tthis.setState({\n\t\t\tdevice\n\t\t});\n\t}\n\n\tUNSAFE_componentWillReceiveProps(props) {\n\t\tif (props.devicesData) {\n\t\t\t//loop throught & find device and update it\n\t\t}\n\t}\n\n\n\n\trender() {\n\t\treturn (\n\t\t\t<View style={appStyle.container}>\n\t\t\t\t{\n\t\t\t\t\t<View style={appStyle.cardContainer}>\n\t\t\t\t\t\t<ScrollView style={appStyle.scrollView}>\n\t\t\t\t\t\t\t<DeviceCard\n\t\t\t\t\t\t\t\tdevice={this.state.device}\n\t\t\t\t\t\t\t\tdeviceList={this.props.sharedDevicesData}\n\t\t\t\t\t\t\t\tIdToken={this.props.sessionData.idToken}\n\t\t\t\t\t\t\t\towner ={this.props.route.params.owner}\n\t\t\t\t\t\t\t\t// owner={this.props.navigation.getParam('owner', null)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t</View>\n\t\t\t\t}\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\tconst { devicesData, sessionData, sharedDevicesData, sharedAccountsData } = state;\n\treturn { devicesData, sessionData, sharedDevicesData, sharedAccountsData };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdosomething: () => {}\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceScreen);\n"]},"metadata":{},"sourceType":"module"}