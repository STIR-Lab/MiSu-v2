{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/components/popup/ConfirmCodePopup.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport appStyle from \"../../styles/AppStyle\";\nimport authStyle from \"../../styles/AuthStyle\";\nimport AppHeaderText from \"../app/AppHeaderText\";\nimport AppTitleText from \"../app/AppTitleText\";\nimport AppText from \"../app/AppText\";\n\nvar ConfirmCodePopup = function (_Component) {\n  _inherits(ConfirmCodePopup, _Component);\n\n  var _super = _createSuper(ConfirmCodePopup);\n\n  function ConfirmCodePopup(props) {\n    var _this;\n\n    _classCallCheck(this, ConfirmCodePopup);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      authCode: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ConfirmCodePopup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        username: this.props.username\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        style: style.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.onCancel();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: appStyle.modalOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: appStyle.popup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: appStyle.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, React.createElement(AppHeaderText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, \"Enter Confirm Code\"), React.createElement(View, {\n        style: appStyle.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: appStyle.formInput,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(username) {\n          return _this2.setState({\n            username: username\n          });\n        },\n        value: this.state.username,\n        placeholder: \"Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }\n      }), React.createElement(TextInput, {\n        style: appStyle.formInput,\n        autoCapitalize: \"none\",\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(authCode) {\n          return _this2.setState({\n            authCode: authCode\n          });\n        },\n        value: this.state.authCode,\n        placeholder: \"Confirm Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: appStyle.regularButton,\n        onPress: function onPress() {\n          return _this2.props.onSubmit(_this2.state.username, _this2.state.authCode);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, React.createElement(AppText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return ConfirmCodePopup;\n}(Component);\n\nvar style = StyleSheet.create({});\nexport default ConfirmCodePopup;","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/components/popup/ConfirmCodePopup.js"],"names":["React","Component","appStyle","authStyle","AppHeaderText","AppTitleText","AppText","ConfirmCodePopup","props","state","username","authCode","setState","style","centeredView","onCancel","modalOverlay","popup","container","formInput","regularButton","onSubmit","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, TextInput, StyleSheet, Modal, TouchableOpacity } from 'react-native';\nimport appStyle from '../../styles/AppStyle';\nimport authStyle from '../../styles/AuthStyle';\nimport AppHeaderText from '../app/AppHeaderText';\nimport AppTitleText from '../app/AppTitleText';\nimport AppText from '../app/AppText';\n\nclass ConfirmCodePopup extends Component \n{\n    constructor(props){\n        super(props);\n    }\n    // Holds all of our global variables\n    state = \n    {\n      username: \"\",\n      authCode: \"\", \n    }\n\n    // Called when when the screen is about to load, use the username from the props for the username\n    componentDidMount() {\n        this.setState( { username : this.props.username } );\n    }\n\n    render () \n    {\n\n        return (\n            <Modal\n                animationType=\"fade\"\n                transparent={true}\n                style={style.centeredView}\n            >\n                <TouchableOpacity onPress= { () => this.props.onCancel() }>\n                    <View style={appStyle.modalOverlay}/>\n                </TouchableOpacity>\n\n                <View style={appStyle.popup}>\n                    <View style={appStyle.container}>\n                        {/* Title */}\n                        <AppHeaderText>Enter Confirm Code</AppHeaderText>\n                        \n                        {/* Render the login form */}\n                        <View style={appStyle.container}>\n                            <TextInput \n                                style={appStyle.formInput} \n                                autoCapitalize=\"none\" \n                                onChangeText={username => this.setState({username})} \n                                value={this.state.username}\n                                placeholder=\"Email\">\n                            </TextInput>\n\n                            <TextInput \n                                style={appStyle.formInput} \n                                autoCapitalize=\"none\" \n                                keyboardType='numeric'\n                                onChangeText={authCode => this.setState({authCode})} \n                                value={this.state.authCode}\n                                placeholder=\"Confirm Code\">\n                            </TextInput>\n                        </View>\n                        \n                        {/* Render the submit button */}\n                        <TouchableOpacity style={appStyle.regularButton} onPress={ () => this.props.onSubmit(this.state.username, this.state.authCode) } >\n                            <AppText>Submit</AppText>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </Modal>\n        );\n    }\n}\n\nconst style = StyleSheet.create({\n    \n });\n\nexport default ConfirmCodePopup;"]},"metadata":{},"sourceType":"module"}