{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Authentication/LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Auth } from 'aws-amplify';\nimport React, { useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { connect } from 'react-redux';\nimport { currentSessionAction } from \"../../redux/Action/currentSessionAction\";\nimport appStyle from \"../../styles/AppStyle\";\nimport authStyle from \"../../styles/AuthStyle\";\nimport ConfirmCodePopup from \"../../components/popup/ConfirmCodePopup\";\nimport ForgotPasswordPopup from \"../../components/popup/ForgotPasswordPopup\";\nimport ForgotPasswordConfirmPopup from \"../../components/popup/ForgotPasswordConfirmPopup\";\n\nfunction LoginScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setIsLoading = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      forgotPasswordState = _useState12[0],\n      setForgotPasswordState = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      forgotPasswordConfirmState = _useState14[0],\n      setForgotPasswordConfirmState = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      rememberMe = _useState16[0],\n      setRememberMe = _useState16[1];\n\n  handleLogin = function handleLogin() {\n    var user;\n    return _regeneratorRuntime.async(function handleLogin$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setErrorMessage('');\n\n            if (!(username === '')) {\n              _context2.next = 5;\n              break;\n            }\n\n            setErrorMessage('Missing email address');\n            _context2.next = 23;\n            break;\n\n          case 5:\n            if (!(password === '')) {\n              _context2.next = 9;\n              break;\n            }\n\n            setErrorMessage('Missing password');\n            _context2.next = 23;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            props.route.params.setLoadingTrue(true);\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(Auth.signIn(username, password).then(function _callee(user) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log('Login successful!');\n                      setErrorMessage('');\n                      setMessage('Login successful!');\n                      setIsLoading(false);\n                      _context.next = 6;\n                      return _regeneratorRuntime.awrap(props.getSession());\n\n                    case 6:\n                      props.route.params.setLoadingFalse(false);\n                      props.route.params.setGoToAppTrue(true);\n                      props.navigation.navigate('App');\n\n                    case 9:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              setErrorMessage(err.message);\n              setMessage('');\n              setIsLoading(false);\n              props.route.params.setLoadingFalse(false);\n            }));\n\n          case 13:\n            user = _context2.sent;\n            _context2.next = 22;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](9);\n            setErrorMessage(err.message);\n            setMessage('');\n            setIsLoading(false);\n            props.route.params.setLoadingFalse(false);\n\n          case 22:\n            setIsLoading(false);\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[9, 16]], Promise);\n  };\n\n  forgotPassword = function forgotPassword(username) {\n    var user;\n    return _regeneratorRuntime.async(function forgotPassword$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setErrorMessage('');\n            setMessage('');\n            setForgotPasswordState(false);\n\n            if (!(username == '')) {\n              _context4.next = 8;\n              break;\n            }\n\n            setMessage('Please enter the email address of your account');\n            setErrorMessage('');\n            _context4.next = 15;\n            break;\n\n          case 8:\n            console.log(username);\n            console.log('-----------');\n            setIsLoading(true);\n            _context4.next = 13;\n            return _regeneratorRuntime.awrap(Auth.forgotPassword(username).then(function _callee2(user) {\n              return _regeneratorRuntime.async(function _callee2$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      console.log('forgot password request successful!');\n                      setErrorMessage('');\n                      setMessage('Request successful, check your email for further instructions.');\n                      setIsLoading(false);\n\n                    case 4:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              setErrorMessage(err.message);\n              setMessage('');\n              setIsLoading(false);\n            }));\n\n          case 13:\n            user = _context4.sent;\n            setIsLoading(false);\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  forgotPasswordConfirm = function forgotPasswordConfirm(username, code, password) {\n    var user;\n    return _regeneratorRuntime.async(function forgotPasswordConfirm$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setErrorMessage('');\n            setMessage('');\n            setForgotPasswordConfirmState(false);\n            console.log('attempting to confirm password ' + username + ', ' + code + ', ' + password);\n\n            if (!(username == '')) {\n              _context6.next = 9;\n              break;\n            }\n\n            setMessage('Please enter the email address of your account');\n            setErrorMessage('');\n            _context6.next = 14;\n            break;\n\n          case 9:\n            setIsLoading(true);\n            _context6.next = 12;\n            return _regeneratorRuntime.awrap(Auth.forgotPasswordSubmit(username, code, password).then(function _callee3(user) {\n              return _regeneratorRuntime.async(function _callee3$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      console.log('forgot password successful!');\n                      setErrorMessage('');\n                      setMessage('Reset successful, login with your new credentials.');\n                      setIsLoading(false);\n\n                    case 4:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              setErrorMessage(err.message);\n              setMessage('');\n              setIsLoading(false);\n            }));\n\n          case 12:\n            user = _context6.sent;\n            setIsLoading(false);\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadingElement = null;\n\n  if (isLoading) {\n    loadingElement = React.createElement(View, {\n      style: [appStyle.loadingHolder],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      style: [appStyle.loadingElement],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  var forgotPasswordPopupElement = null;\n\n  if (forgotPasswordState) {\n    forgotPasswordPopupElement = React.createElement(ForgotPasswordPopup, {\n      onCancel: function onCancel() {\n        return setForgotPasswordState(false);\n      },\n      onSubmit: forgotPassword,\n      username: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    });\n  }\n\n  var forgotPasswordConfirmPopupElement = null;\n\n  if (forgotPasswordConfirmState) {\n    forgotPasswordConfirmPopupElement = React.createElement(ForgotPasswordConfirmPopup, {\n      onCancel: function onCancel() {\n        return setForgotPasswordConfirmState(false);\n      },\n      onSubmit: forgotPasswordConfirm,\n      username: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    });\n  }\n\n  var messageElement = null;\n\n  if (message) {\n    messageElement = React.createElement(View, {\n      style: authStyle.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, message && React.createElement(Text, {\n      style: authStyle.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, message));\n  }\n\n  var errorElement = null;\n\n  if (errorMessage) {\n    errorElement = React.createElement(View, {\n      style: authStyle.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, errorMessage && React.createElement(Text, {\n      style: authStyle.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, errorMessage));\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.iconHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../assets/MISU.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: [styles.greeting],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, \"Welcome to\", React.createElement(Text, {\n    style: styles.appName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, \" MiSu\")), React.createElement(View, {\n    style: styles.authForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.iconAndInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.iconInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/icons/email-icon.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  })), React.createElement(TextInput, {\n    style: styles.formInput,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(username) {\n      return setUsername(username);\n    },\n    value: username,\n    placeholder: \"Email Address\",\n    placeholderTextColor: \"#808080\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.iconAndInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.iconInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/icons/lock.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  })), React.createElement(TextInput, {\n    style: styles.formInput,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    value: password,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#808080\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignSelf: 'center',\n      marginTop: 0\n    },\n    onPress: function onPress() {\n      setForgotPasswordState(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#414959',\n      fontSize: 13\n    },\n    Password: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"Forgot your password?\", ' ', React.createElement(Text, {\n    style: {\n      color: '#71ccf0',\n      fontWeight: '500'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, \"Get code\")))), React.createElement(View, {\n    style: authStyle.authFormButtonHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginButton,\n    onPress: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#FFF',\n      fontSize: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, \"Login\"))), errorElement, messageElement, forgotPasswordPopupElement, forgotPasswordConfirmPopupElement, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignSelf: 'center',\n      marginTop: 40\n    },\n    onPress: function onPress() {\n      return props.navigation.navigate('Register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#414959',\n      fontSize: 13\n    },\n    Password: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, \"Need an account?\", ' ', React.createElement(Text, {\n    style: {\n      color: '#71ccf0',\n      fontWeight: '500'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, \"Sign up\")))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignSelf: 'center',\n      marginTop: 2\n    },\n    onPress: function onPress() {\n      setForgotPasswordConfirmState(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#414959',\n      fontSize: 13\n    },\n    Password: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, \"Have a forgot password confirm code?\", ' ', React.createElement(Text, {\n    style: {\n      color: '#71ccf0',\n      fontWeight: '500'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, \"Confirm\")))), loadingElement));\n}\n\nvar styles = StyleSheet.create({\n  appName: {\n    fontWeight: 'bold'\n  },\n  authForm: {\n    marginTop: 60,\n    marginBottom: 15,\n    marginHorizontal: 30\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n    paddingTop: 60\n  },\n  formInput: {\n    fontSize: 15,\n    marginLeft: 20,\n    height: 50,\n    width: 280\n  },\n  greeting: {\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: '100',\n    marginLeft: -15\n  },\n  icon: {\n    height: 285,\n    width: 285,\n    marginBottom: -65,\n    marginTop: -45\n  },\n  iconInput: {\n    width: 20,\n    marginLeft: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconHolder: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconAndInput: {\n    flexDirection: 'row',\n    borderRadius: 10,\n    backgroundColor: '#F3F3F3',\n    borderColor: '#D6D6D6',\n    borderWidth: 1,\n    height: 50,\n    marginTop: 30,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 1,\n    elevation: 3\n  },\n  loginButton: {\n    backgroundColor: '#008CFF',\n    marginTop: 20,\n    borderRadius: 10,\n    height: 60,\n    width: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 1,\n    elevation: 10\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getSession: function getSession() {\n      return dispatch(currentSessionAction());\n    }\n  };\n};\n\nexport default connect(undefined, mapDispatchToProps)(LoginScreen);","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Authentication/LoginScreen.js"],"names":["Auth","React","useState","connect","currentSessionAction","appStyle","authStyle","ConfirmCodePopup","ForgotPasswordPopup","ForgotPasswordConfirmPopup","LoginScreen","props","username","setUsername","password","setPassword","errorMessage","setErrorMessage","message","setMessage","isLoading","setIsLoading","forgotPasswordState","setForgotPasswordState","forgotPasswordConfirmState","setForgotPasswordConfirmState","rememberMe","setRememberMe","handleLogin","route","params","setLoadingTrue","signIn","then","user","console","log","getSession","setLoadingFalse","setGoToAppTrue","navigation","navigate","catch","err","forgotPassword","forgotPasswordConfirm","code","forgotPasswordSubmit","loadingElement","loadingHolder","forgotPasswordPopupElement","forgotPasswordConfirmPopupElement","messageElement","errorElement","Keyboard","dismiss","styles","container","iconHolder","icon","require","greeting","appName","authForm","iconAndInput","iconInput","formInput","alignSelf","marginTop","color","fontSize","fontWeight","authFormButtonHolder","loginButton","StyleSheet","create","marginBottom","marginHorizontal","flex","backgroundColor","paddingTop","marginLeft","height","width","textAlign","justifyContent","alignItems","flexDirection","borderRadius","borderColor","borderWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","mapDispatchToProps","dispatch","undefined"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,aAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;;;;AAYA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,0BAAP;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAM1B,kBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwCb,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAOc,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA8Bf,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOgB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAkCjB,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOkB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAAsDnB,QAAQ,CAAC,KAAD,CAA9D;AAAA;AAAA,MAAOoB,mBAAP;AAAA,MAA4BC,sBAA5B;;AACA,oBAAoErB,QAAQ,CAAC,KAAD,CAA5E;AAAA;AAAA,MAAOsB,0BAAP;AAAA,MAAmCC,6BAAnC;;AACA,oBAAoCvB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOwB,UAAP;AAAA,MAAmBC,aAAnB;;AAEAC,EAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZX,YAAAA,eAAe,CAAC,EAAD,CAAf;;AADY,kBAGRL,QAAQ,KAAK,EAHL;AAAA;AAAA;AAAA;;AAIVK,YAAAA,eAAe,CAAC,uBAAD,CAAf;AAJU;AAAA;;AAAA;AAAA,kBAKHH,QAAQ,KAAK,EALV;AAAA;AAAA;AAAA;;AAMVG,YAAAA,eAAe,CAAC,kBAAD,CAAf;AANU;AAAA;;AAAA;AAAA;AASRN,YAAAA,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBC,cAAnB,CAAkC,IAAlC;AATQ;AAAA,6CAWW/B,IAAI,CAACgC,MAAL,CAAYpB,QAAZ,EAAsBE,QAAtB,EAChBmB,IADgB,CACX,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACJC,sBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAnB,sBAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,sBAAAA,UAAU,CAAC,mBAAD,CAAV;AACAE,sBAAAA,YAAY,CAAC,KAAD,CAAZ;AALI;AAAA,uDAOEV,KAAK,CAAC0B,UAAN,EAPF;;AAAA;AASJ1B,sBAAAA,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBQ,eAAnB,CAAmC,KAAnC;AAEA3B,sBAAAA,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBS,cAAnB,CAAkC,IAAlC;AAEA5B,sBAAAA,KAAK,CAAC6B,UAAN,CAAiBC,QAAjB,CAA0B,KAA1B;;AAbI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW,EAgBhBC,KAhBgB,CAgBV,UAACC,GAAD,EAAS;AACd1B,cAAAA,eAAe,CAAC0B,GAAG,CAACzB,OAAL,CAAf;AACAC,cAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACAV,cAAAA,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBQ,eAAnB,CAAmC,KAAnC;AACD,aArBgB,CAXX;;AAAA;AAWFJ,YAAAA,IAXE;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkCRjB,YAAAA,eAAe,CAAC0B,GAAG,CAACzB,OAAL,CAAf;AACIC,YAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACAV,YAAAA,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBQ,eAAnB,CAAmC,KAAnC;;AArCI;AAuCVjB,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AAvCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AA4CAuB,EAAAA,cAAc,GAAG,wBAAOhC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfK,YAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,YAAAA,UAAU,CAAC,EAAD,CAAV;AACAI,YAAAA,sBAAsB,CAAC,KAAD,CAAtB;;AAHe,kBAMXX,QAAQ,IAAI,EAND;AAAA;AAAA;AAAA;;AAObO,YAAAA,UAAU,CAAC,gDAAD,CAAV;AACAF,YAAAA,eAAe,CAAC,EAAD,CAAf;AARa;AAAA;;AAAA;AAUbkB,YAAAA,OAAO,CAACC,GAAR,CAAYxB,QAAZ;AACAuB,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAf,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAZa;AAAA,6CAaMrB,IAAI,CAAC4C,cAAL,CAAoBhC,QAApB,EAChBqB,IADgB,CACX,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACJC,sBAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AAEAnB,sBAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,sBAAAA,UAAU,CAAC,gEAAD,CAAV;AACAE,sBAAAA,YAAY,CAAC,KAAD,CAAZ;;AALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW,EAQhBqB,KARgB,CAQV,UAACC,GAAD,EAAS;AACd1B,cAAAA,eAAe,CAAC0B,GAAG,CAACzB,OAAL,CAAf;AACAC,cAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,aAZgB,CAbN;;AAAA;AAaPa,YAAAA,IAbO;AA0Bbb,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AA1Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AA+BAwB,EAAAA,qBAAqB,GAAG,+BAAOjC,QAAP,EAAiBkC,IAAjB,EAAuBhC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBG,YAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,YAAAA,UAAU,CAAC,EAAD,CAAV;AACAM,YAAAA,6BAA6B,CAAC,KAAD,CAA7B;AAEAU,YAAAA,OAAO,CAACC,GAAR,CACE,oCACExB,QADF,GAEE,IAFF,GAGEkC,IAHF,GAIE,IAJF,GAKEhC,QANJ;;AALsB,kBAclBF,QAAQ,IAAI,EAdM;AAAA;AAAA;AAAA;;AAepBO,YAAAA,UAAU,CAAC,gDAAD,CAAV;AACAF,YAAAA,eAAe,CAAC,EAAD,CAAf;AAhBoB;AAAA;;AAAA;AAkBpBI,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAlBoB;AAAA,6CAmBDrB,IAAI,CAAC+C,oBAAL,CAA0BnC,QAA1B,EAAoCkC,IAApC,EAA0ChC,QAA1C,EAChBmB,IADgB,CACX,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACJC,sBAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEAnB,sBAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,sBAAAA,UAAU,CAAC,oDAAD,CAAV;AACAE,sBAAAA,YAAY,CAAC,KAAD,CAAZ;;AALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW,EAQhBqB,KARgB,CAQV,UAACC,GAAD,EAAS;AACd1B,cAAAA,eAAe,CAAC0B,GAAG,CAACzB,OAAL,CAAf;AACAC,cAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,aAZgB,CAnBC;;AAAA;AAmBda,YAAAA,IAnBc;AAgCpBb,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AAhCoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAsCA,MAAI2B,cAAc,GAAG,IAArB;;AACA,MAAI5B,SAAJ,EAAe;AACb4B,IAAAA,cAAc,GACZ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAC3C,QAAQ,CAAC4C,aAAV,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAE,CAAC5C,QAAQ,CAAC2C,cAAV,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAGD,MAAIE,0BAA0B,GAAG,IAAjC;;AACA,MAAI5B,mBAAJ,EAAyB;AACvB4B,IAAAA,0BAA0B,GACxB,oBAAC,mBAAD;AACE,MAAA,QAAQ,EAAE;AAAA,eAAM3B,sBAAsB,CAAC,KAAD,CAA5B;AAAA,OADZ;AAEE,MAAA,QAAQ,EAAEqB,cAFZ;AAGE,MAAA,QAAQ,EAAEhC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAGD,MAAIuC,iCAAiC,GAAG,IAAxC;;AACA,MAAI3B,0BAAJ,EAAgC;AAC9B2B,IAAAA,iCAAiC,GAC/B,oBAAC,0BAAD;AACE,MAAA,QAAQ,EAAE;AAAA,eAAM1B,6BAA6B,CAAC,KAAD,CAAnC;AAAA,OADZ;AAEE,MAAA,QAAQ,EAAEoB,qBAFZ;AAGE,MAAA,QAAQ,EAAEjC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAGD,MAAIwC,cAAc,GAAG,IAArB;;AACA,MAAIlC,OAAJ,EAAa;AACXkC,IAAAA,cAAc,GACZ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE9C,SAAS,CAACY,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OAAO,IACN,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,SAAS,CAACY,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCA,OAAjC,CAFJ,CADF;AAOD;;AAGD,MAAImC,YAAY,GAAG,IAAnB;;AACA,MAAIrC,YAAJ,EAAkB;AAChBqC,IAAAA,YAAY,GACV,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE/C,SAAS,CAACU,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,YAAY,IACX,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,SAAS,CAACU,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,YADH,CAFJ,CADF;AASD;;AAED,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEsC,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,IADhB;AAEE,IAAA,MAAM,EAAEC,OAAO,yBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,QAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAVF,EAgBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,OAAO,qCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEJ,MAAM,CAACU,SADhB;AAEE,IAAA,cAAc,EAAC,MAFjB;AAGE,IAAA,YAAY,EAAE,sBAACtD,QAAD;AAAA,aAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,KAHhB;AAIE,IAAA,KAAK,EAAEA,QAJT;AAKE,IAAA,WAAW,EAAC,eALd;AAME,IAAA,oBAAoB,EAAC,SANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4C,MAAM,CAACQ,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,OAAO,+BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEJ,MAAM,CAACU,SADhB;AAEE,IAAA,eAAe,MAFjB;AAGE,IAAA,cAAc,EAAC,MAHjB;AAIE,IAAA,YAAY,EAAE,sBAACpD,QAAD;AAAA,aAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAEA,QALT;AAME,IAAA,WAAW,EAAC,UANd;AAOE,IAAA,oBAAoB,EAAC,SAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAfF,CAhBF,EAgDE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEqD,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,SAAS,EAAE;AAAlC,KADT;AAEE,IAAA,OAAO,EAAE,mBAAM;AACb7C,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE8C,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAb;AAAiD,IAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACwB,GADxB,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBE,MAAAA,UAAU,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CANF,CADF,CAhDF,EAiEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjE,SAAS,CAACkE,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEhB,MAAM,CAACiB,WADhB;AAEE,IAAA,OAAO,EAAE7C,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEyC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF,CAjEF,EA2EGjB,YA3EH,EA8EGD,cA9EH,EAiFGF,0BAjFH,EAoFGC,iCApFH,EAuFE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEgB,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,SAAS,EAAE;AAAlC,KADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMzD,KAAK,CAAC6B,UAAN,CAAiBC,QAAjB,CAA0B,UAA1B,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE4B,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAb;AAAiD,IAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmB,GADnB,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBE,MAAAA,UAAU,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAJF,CADF,CAvFF,EAsGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,SAAS,EAAE;AAAlC,KADT;AAEE,IAAA,OAAO,EAAE,mBAAM;AACb3C,MAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE4C,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAb;AAAiD,IAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACuC,GADvC,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBE,MAAAA,UAAU,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CANF,CADF,CAtGF,EAuHGvB,cAvHH,CADF,CADF;AA6HD;;AAED,IAAMQ,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,OAAO,EAAE;AACPS,IAAAA,UAAU,EAAE;AADL,GADsB;AAI/BR,EAAAA,QAAQ,EAAE;AACRK,IAAAA,SAAS,EAAE,EADH;AAERQ,IAAAA,YAAY,EAAE,EAFN;AAGRC,IAAAA,gBAAgB,EAAE;AAHV,GAJqB;AAS/BpB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,UAAU,EAAE;AAHH,GAToB;AAc/Bd,EAAAA,SAAS,EAAE;AACTI,IAAAA,QAAQ,EAAE,EADD;AAETW,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,MAAM,EAAE,EAHC;AAITC,IAAAA,KAAK,EAAE;AAJE,GAdoB;AAoB/BtB,EAAAA,QAAQ,EAAE;AACRS,IAAAA,QAAQ,EAAE,EADF;AAERc,IAAAA,SAAS,EAAE,QAFH;AAGRb,IAAAA,UAAU,EAAE,KAHJ;AAIRU,IAAAA,UAAU,EAAE,CAAC;AAJL,GApBqB;AA0B/BtB,EAAAA,IAAI,EAAE;AACJuB,IAAAA,MAAM,EAAE,GADJ;AAEJC,IAAAA,KAAK,EAAE,GAFH;AAGJP,IAAAA,YAAY,EAAE,CAAC,EAHX;AAIJR,IAAAA,SAAS,EAAE,CAAC;AAJR,GA1ByB;AAgC/BH,EAAAA,SAAS,EAAE;AACTkB,IAAAA,KAAK,EAAE,EADE;AAETF,IAAAA,UAAU,EAAE,EAFH;AAGTI,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE;AAJH,GAhCoB;AAsC/B5B,EAAAA,UAAU,EAAE;AACV2B,IAAAA,cAAc,EAAE,QADN;AAEVC,IAAAA,UAAU,EAAE;AAFF,GAtCmB;AA0C/BtB,EAAAA,YAAY,EAAE;AACZuB,IAAAA,aAAa,EAAE,KADH;AAEZC,IAAAA,YAAY,EAAE,EAFF;AAGZT,IAAAA,eAAe,EAAE,SAHL;AAIZU,IAAAA,WAAW,EAAE,SAJD;AAKZC,IAAAA,WAAW,EAAE,CALD;AAMZR,IAAAA,MAAM,EAAE,EANI;AAOZd,IAAAA,SAAS,EAAE,EAPC;AAQZkB,IAAAA,UAAU,EAAE,QARA;AASZK,IAAAA,WAAW,EAAE,MATD;AAUZC,IAAAA,YAAY,EAAE;AAAET,MAAAA,KAAK,EAAE,CAAT;AAAYD,MAAAA,MAAM,EAAE;AAApB,KAVF;AAWZW,IAAAA,aAAa,EAAE,GAXH;AAYZC,IAAAA,YAAY,EAAE,CAZF;AAaZC,IAAAA,SAAS,EAAE;AAbC,GA1CiB;AAyD/BtB,EAAAA,WAAW,EAAE;AACXM,IAAAA,eAAe,EAAE,SADN;AAEXX,IAAAA,SAAS,EAAE,EAFA;AAGXoB,IAAAA,YAAY,EAAE,EAHH;AAIXN,IAAAA,MAAM,EAAE,EAJG;AAKXC,IAAAA,KAAK,EAAE,GALI;AAMXG,IAAAA,UAAU,EAAE,QAND;AAOXD,IAAAA,cAAc,EAAE,QAPL;AAQXM,IAAAA,WAAW,EAAE,MARF;AASXC,IAAAA,YAAY,EAAE;AAAET,MAAAA,KAAK,EAAE,CAAT;AAAYD,MAAAA,MAAM,EAAE;AAApB,KATH;AAUXW,IAAAA,aAAa,EAAE,GAVJ;AAWXC,IAAAA,YAAY,EAAE,CAXH;AAYXC,IAAAA,SAAS,EAAE;AAZA;AAzDkB,CAAlB,CAAf;;AAyEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACL5D,IAAAA,UAAU,EAAE;AAAA,aAAM4D,QAAQ,CAAC7F,oBAAoB,EAArB,CAAd;AAAA;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CAAC+F,SAAD,EAAYF,kBAAZ,CAAP,CAAuCtF,WAAvC,CAAf","sourcesContent":["import { Auth } from 'aws-amplify';\nimport React, {useState} from 'react';\nimport {\n  ActivityIndicator,\n  Image,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  Keyboard,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport { currentSessionAction } from '../../redux/Action/currentSessionAction';\nimport appStyle from '../../styles/AppStyle';\nimport authStyle from '../../styles/AuthStyle';\nimport ConfirmCodePopup from '../../components/popup/ConfirmCodePopup';\nimport ForgotPasswordPopup from '../../components/popup/ForgotPasswordPopup';\nimport ForgotPasswordConfirmPopup from '../../components/popup/ForgotPasswordConfirmPopup';\n\nfunction LoginScreen(props) {\n  // static navigationOptions = {\n  //   header: () => false,\n  //   /* No more header config here! */\n  // };\n  \n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [forgotPasswordState, setForgotPasswordState] = useState(false);\n  const [forgotPasswordConfirmState, setForgotPasswordConfirmState] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n\n  handleLogin = async () => {\n    setErrorMessage('');\n\n    if (username === '')\n      setErrorMessage('Missing email address');\n    else if (password === '')\n      setErrorMessage('Missing password');\n    else {\n      try {\n        props.route.params.setLoadingTrue(true);\n\n        const user = await Auth.signIn(username, password)\n          .then(async (user) => {\n            console.log('Login successful!');\n\n            setErrorMessage('');\n            setMessage('Login successful!');\n            setIsLoading(false);\n\n            await props.getSession();\n\n            props.route.params.setLoadingFalse(false);\n\n            props.route.params.setGoToAppTrue(true);\n            // this.props.route.params.setGoToAuthFalse();\n            props.navigation.navigate('App');\n          })\n          .catch((err) => {\n            setErrorMessage(err.message);\n            setMessage('');\n            setIsLoading(false);\n            props.route.params.setLoadingFalse(false);\n          });\n      } catch (error) {\n        setErrorMessage(err.message);\n            setMessage('');\n            setIsLoading(false);\n            props.route.params.setLoadingFalse(false);\n      }\n      setIsLoading(false);\n    }\n  };\n\n  // Complete the forgot password auth\n  forgotPassword = async (username) => {\n    setErrorMessage('');\n    setMessage('');\n    setForgotPasswordState(false);\n\n    // Form validation\n    if (username == '') {\n      setMessage('Please enter the email address of your account');\n      setErrorMessage('');\n    } else {\n      console.log(username);\n      console.log('-----------');\n      setIsLoading(true);\n      const user = await Auth.forgotPassword(username)\n        .then(async (user) => {\n          console.log('forgot password request successful!');\n\n          setErrorMessage('');\n          setMessage('Request successful, check your email for further instructions.');\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          setErrorMessage(err.message);\n          setMessage('');\n          setIsLoading(false);\n        });\n      setIsLoading(false);\n    }\n  };\n\n  // Complete the forgot password auth\n  forgotPasswordConfirm = async (username, code, password) => {\n    setErrorMessage('');\n    setMessage('');\n    setForgotPasswordConfirmState(false);\n\n    console.log(\n      'attempting to confirm password ' +\n        username +\n        ', ' +\n        code +\n        ', ' +\n        password\n    );\n    // Form validation\n    if (username == '') {\n      setMessage('Please enter the email address of your account');\n      setErrorMessage('');\n    } else {\n      setIsLoading(true);\n      const user = await Auth.forgotPasswordSubmit(username, code, password)\n        .then(async (user) => {\n          console.log('forgot password successful!');\n\n          setErrorMessage('');\n          setMessage('Reset successful, login with your new credentials.');\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          setErrorMessage(err.message);\n          setMessage('');\n          setIsLoading(false);\n        });\n      setIsLoading(false);\n    }\n  };\n\n  // console.log(this.props);\n  // The loading element will restrict input during networked operations\n  let loadingElement = null;\n  if (isLoading) {\n    loadingElement = (\n      <View style={[appStyle.loadingHolder]}>\n        <ActivityIndicator size=\"large\" style={[appStyle.loadingElement]} />\n      </View>\n    );\n  }\n\n  // The confirm code popup will appear if there is actually an error\n  let forgotPasswordPopupElement = null;\n  if (forgotPasswordState) {\n    forgotPasswordPopupElement = (\n      <ForgotPasswordPopup\n        onCancel={() => setForgotPasswordState(false)}\n        onSubmit={forgotPassword}\n        username={username}\n      />\n    );\n  }\n\n  // The confirm code popup will appear if there is actually an error\n  let forgotPasswordConfirmPopupElement = null;\n  if (forgotPasswordConfirmState) {\n    forgotPasswordConfirmPopupElement = (\n      <ForgotPasswordConfirmPopup\n        onCancel={() => setForgotPasswordConfirmState(false)}\n        onSubmit={forgotPasswordConfirm}\n        username={username}\n      />\n    );\n  }\n\n  // The message element will be set if there is actually an error\n  let messageElement = null;\n  if (message) {\n    messageElement = (\n      <View style={authStyle.message}>\n        {message && (\n          <Text style={authStyle.message}>{message}</Text>\n        )}\n      </View>\n    );\n  }\n\n  // The error element will be set if there is actually an error\n  let errorElement = null;\n  if (errorMessage) {\n    errorElement = (\n      <View style={authStyle.errorMessage}>\n        {errorMessage && (\n          <Text style={authStyle.errorMessage}>\n            {errorMessage}\n          </Text>\n        )}\n      </View>\n    );\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View style={styles.container}>\n        {/* Render the app icon */}\n        <View style={styles.iconHolder}>\n          <Image\n            style={styles.icon}\n            source={require('../../assets/MISU.png')}\n          />\n        </View>\n\n        {/* Render the greeting */}\n        <Text style={[styles.greeting]}>\n          Welcome to\n          <Text style={styles.appName}> MiSu</Text>\n        </Text>\n\n        {/* Render the login form */}\n        <View style={styles.authForm}>\n          <View style={styles.iconAndInput}>\n            <View style={styles.iconInput}>\n              <Image source={require('../../assets/icons/email-icon.png')} />\n            </View>\n            <TextInput\n              style={styles.formInput}\n              autoCapitalize=\"none\"\n              onChangeText={(username) => setUsername(username)}\n              value={username}\n              placeholder=\"Email Address\"\n              placeholderTextColor=\"#808080\"\n            ></TextInput>\n          </View>\n\n          <View style={styles.iconAndInput}>\n            <View style={styles.iconInput}>\n              <Image source={require('../../assets/icons/lock.png')} />\n            </View>\n            <TextInput\n              style={styles.formInput}\n              secureTextEntry\n              autoCapitalize=\"none\"\n              onChangeText={(password) => setPassword(password)}\n              value={password}\n              placeholder=\"Password\"\n              placeholderTextColor=\"#808080\"\n            ></TextInput>\n          </View>\n        </View>\n\n        {/* Render the forgot password btn */}\n        <View>\n          <TouchableOpacity\n            style={{ alignSelf: 'center', marginTop: 0 }}\n            onPress={() => {\n              setForgotPasswordState(true);\n            }}\n          >\n            <Text style={{ color: '#414959', fontSize: 13 }} Password>\n              Forgot your password?{' '}\n              <Text style={{ color: '#71ccf0', fontWeight: '500' }}>\n                Get code\n              </Text>\n            </Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* Render the submit button */}\n        <View style={authStyle.authFormButtonHolder}>\n          <TouchableOpacity\n            style={styles.loginButton}\n            onPress={handleLogin}\n          >\n            <Text style={{ color: '#FFF', fontSize: 25 }}>Login</Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* Render the error message */}\n        {errorElement}\n\n        {/* Render the message */}\n        {messageElement}\n\n        {/* Render the forgot popup */}\n        {forgotPasswordPopupElement}\n\n        {/* Render the forgot confirm popup */}\n        {forgotPasswordConfirmPopupElement}\n\n        {/* Render the register toggle */}\n        <View>\n          <TouchableOpacity\n            style={{ alignSelf: 'center', marginTop: 40 }}\n            onPress={() => props.navigation.navigate('Register')}\n          >\n            <Text style={{ color: '#414959', fontSize: 13 }} Password>\n              Need an account?{' '}\n              <Text style={{ color: '#71ccf0', fontWeight: '500' }}>\n                Sign up\n              </Text>\n            </Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* Render the confirm forgot password confirm btn */}\n        <View>\n          <TouchableOpacity\n            style={{ alignSelf: 'center', marginTop: 2 }}\n            onPress={() => {\n              setForgotPasswordConfirmState(true);\n            }}\n          >\n            <Text style={{ color: '#414959', fontSize: 13 }} Password>\n              Have a forgot password confirm code?{' '}\n              <Text style={{ color: '#71ccf0', fontWeight: '500' }}>\n                Confirm\n              </Text>\n            </Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* Render the loading element */}\n        {loadingElement}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  appName: {\n    fontWeight: 'bold',\n  },\n  authForm: {\n    marginTop: 60,\n    marginBottom: 15,\n    marginHorizontal: 30,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n    paddingTop: 60,\n  },\n  formInput: {\n    fontSize: 15,\n    marginLeft: 20,\n    height: 50,\n    width: 280,\n  },\n  greeting: {\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: '100',\n    marginLeft: -15,\n  },\n  icon: {\n    height: 285,\n    width: 285,\n    marginBottom: -65,\n    marginTop: -45,\n  },\n  iconInput: {\n    width: 20,\n    marginLeft: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconHolder: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconAndInput: {\n    flexDirection: 'row',\n    borderRadius: 10,\n    backgroundColor: '#F3F3F3',\n    borderColor: '#D6D6D6',\n    borderWidth: 1,\n    height: 50,\n    marginTop: 30,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.8,\n    shadowRadius: 1,\n    elevation: 3,\n  },\n  loginButton: {\n    backgroundColor: '#008CFF',\n    marginTop: 20,\n    borderRadius: 10,\n    height: 60,\n    width: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.8,\n    shadowRadius: 1,\n    elevation: 10,\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getSession: () => dispatch(currentSessionAction()),\n  };\n};\n\nexport default connect(undefined, mapDispatchToProps)(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}