{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Authentication/RegisterScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Auth } from 'aws-amplify';\nimport appStyle from \"../../styles/AppStyle\";\nimport authStyle from \"../../styles/AuthStyle\";\nimport ConfirmCodePopup from \"../../components/popup/ConfirmCodePopup\";\nimport AnimatedMultistep from 'react-native-animated-multistep';\nimport Step1 from \"./RegisterStep1\";\nimport Step2 from \"./RegisterStep2\";\nimport RegistrationFinal from \"./RegistrationFinal\";\nvar allSteps = [{\n  name: 'step 1',\n  component: Step1\n}, {\n  name: 'step 2',\n  component: Step2\n}, {\n  name: 'step 3',\n  component: RegistrationFinal\n}];\n\nvar RegisterScreen = function (_React$Component) {\n  _inherits(RegisterScreen, _React$Component);\n\n  var _super = _createSuper(RegisterScreen);\n\n  function RegisterScreen() {\n    var _this;\n\n    _classCallCheck(this, RegisterScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: '',\n      username: '',\n      password: '',\n      phone: '',\n      street: '',\n      city: '',\n      state: '',\n      apartmentNo: '',\n      userId: null,\n      errorMessage: null,\n      message: null,\n      signedUp: false,\n      authCode: '',\n      confirmingCode: false,\n      isLoading: false\n    };\n\n    _this.handleSignUp = function _callee(finalState) {\n      var address, city, name, password, phone, street, state, username, passwordRegex, response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                errorMessage: ''\n              });\n\n              _this.setState({\n                message: ''\n              });\n\n              _this.setState({\n                isLoading: true\n              });\n\n              console.log('street: ' + street);\n              address = finalState.address, city = finalState.city, name = finalState.name, password = finalState.password, phone = finalState.phone, street = finalState.street, state = finalState.state, username = finalState.username;\n              passwordRegex = new RegExp('^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$', 'g');\n\n              if (!(name === '')) {\n                _context.next = 10;\n                break;\n              }\n\n              _this.setState({\n                errorMessage: 'Missing name'\n              });\n\n              _context.next = 26;\n              break;\n\n            case 10:\n              if (!(username === '')) {\n                _context.next = 14;\n                break;\n              }\n\n              _this.setState({\n                errorMessage: 'Missing email address'\n              });\n\n              _context.next = 26;\n              break;\n\n            case 14:\n              if (!(password === '')) {\n                _context.next = 18;\n                break;\n              }\n\n              _this.setState({\n                errorMessage: 'Missing password'\n              });\n\n              _context.next = 26;\n              break;\n\n            case 18:\n              if (!(passwordRegex.test(password) == false)) {\n                _context.next = 22;\n                break;\n              }\n\n              _this.setState({\n                errorMessage: 'Password Must contain 8 characters, a number, a symbol, an upper case letter, and a lower case letter'\n              });\n\n              _context.next = 26;\n              break;\n\n            case 22:\n              console.log(username, password, name);\n              _context.next = 25;\n              return _regeneratorRuntime.awrap(Auth.signUp({\n                username: username,\n                password: password,\n                attributes: {\n                  name: name,\n                  email: username,\n                  phone_number: '+1' + phone.replace(/\\D/g, ''),\n                  address: street,\n                  'custom:city': city,\n                  'custom:state': state\n                }\n              }).then(function (response) {\n                _this.setState({\n                  error: null,\n                  userId: response.userSub,\n                  signedUp: true,\n                  message: 'A confirmation code was sent to your email! '\n                });\n\n                _this.setState({\n                  errorMessage: ''\n                });\n\n                _this.setState({\n                  confirmingCode: true\n                });\n\n                console.log('sign up successful!');\n                console.log(response.userSub);\n              }).catch(function (error) {\n                _this.setState({\n                  errorMessage: error.message\n                });\n\n                console.log('Error', error.message);\n              }));\n\n            case 25:\n              response = _context.sent;\n\n            case 26:\n              _this.setState({\n                isLoading: false\n              });\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.confirmSignUp = function _callee3(username, authCode) {\n      var user;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                errorMessage: ''\n              });\n\n              _this.setState({\n                message: ''\n              });\n\n              _this.setState({\n                confirmingCode: false\n              });\n\n              if (!(username == '')) {\n                _context3.next = 8;\n                break;\n              }\n\n              _this.setState({\n                message: \"Please enter the email you're verifying\"\n              });\n\n              _this.setState({\n                errorMessage: ''\n              });\n\n              _context3.next = 17;\n              break;\n\n            case 8:\n              if (!(authCode == '')) {\n                _context3.next = 13;\n                break;\n              }\n\n              _this.setState({\n                message: 'Please enter the code sent to your email'\n              });\n\n              _this.setState({\n                errorMessage: ''\n              });\n\n              _context3.next = 17;\n              break;\n\n            case 13:\n              _this.setState({\n                isLoading: true\n              });\n\n              _context3.next = 16;\n              return _regeneratorRuntime.awrap(Auth.confirmSignUp(username, authCode).then(function _callee2(user) {\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        console.log('confirmed sign up successful!');\n\n                        _this.setState({\n                          errorMessage: ''\n                        });\n\n                        _this.setState({\n                          message: 'Confirm successful, please sign in.'\n                        });\n\n                        _this.setState({\n                          isLoading: false\n                        });\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (err) {\n                _this.setState({\n                  errorMessage: err.message\n                });\n\n                _this.setState({\n                  message: ''\n                });\n\n                _this.setState({\n                  isLoading: false\n                });\n              }));\n\n            case 16:\n              user = _context3.sent;\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onNext = function () {\n      console.log('Next');\n    };\n\n    _this.onBack = function () {\n      console.log('Back');\n    };\n\n    _this.finish = function (finalState) {\n      _this.handleSignUp(finalState);\n\n      console.log(finalState);\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var loadingElement = null;\n\n      if (this.state.isLoading) {\n        loadingElement = React.createElement(View, {\n          style: [appStyle.loadingHolder],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          style: [appStyle.loadingElement],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      var errorElement = null;\n\n      if (this.state.errorMessage) {\n        errorElement = React.createElement(View, {\n          style: authStyle.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 9\n          }\n        }, this.state.errorMessage && React.createElement(Text, {\n          style: authStyle.errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }\n        }, this.state.errorMessage));\n      }\n\n      var messageElement = null;\n\n      if (this.state.message) {\n        messageElement = React.createElement(View, {\n          style: authStyle.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 9\n          }\n        }, this.state.message && React.createElement(Text, {\n          style: authStyle.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }\n        }, this.state.message));\n      }\n\n      var confirmPopupElement = null;\n\n      if (this.state.confirmingCode) {\n        confirmPopupElement = React.createElement(ConfirmCodePopup, {\n          onCancel: function onCancel() {\n            return _this2.setState({\n              confirmingCode: false\n            });\n          },\n          onSubmit: this.confirmSignUp,\n          username: this.state.username,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(KeyboardAvoidingView, {\n        enabled: true,\n        behavior: \"height\",\n        style: authStyle.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        style: authStyle.container,\n        bounces: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, loadingElement, confirmPopupElement, React.createElement(View, {\n        style: authStyle.iconHolder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: authStyle.icon,\n        source: require(\"../../assets/MISUv2.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      })), React.createElement(Text, {\n        style: authStyle.greeting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, \"Create your\", React.createElement(Text, {\n        style: authStyle.appName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, \" \", 'MiSu', \" \"), \"account\"), React.createElement(View, {\n        style: authStyle.authForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, React.createElement(AnimatedMultistep, {\n        steps: allSteps,\n        onFinish: this.finish,\n        onBack: this.onBack,\n        onNext: this.onNext,\n        comeInOnNext: \"bounceInUp\",\n        OutOnNext: \"bounceOutDown\",\n        comeInOnBack: \"bounceInDown\",\n        OutOnBack: \"bounceOutUp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      })), errorElement, messageElement, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignSelf: 'center',\n          marginTop: 16\n        },\n        onPress: function onPress() {\n          _this2.setState({\n            confirmingCode: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#414959',\n          fontSize: 13\n        },\n        Password: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }\n      }, \"Have a confirmation code?\", ' ', React.createElement(Text, {\n        style: {\n          color: '#71ccf0',\n          fontWeight: '500'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }\n      }, \"Confirm\")))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignSelf: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Login');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#414959',\n          fontSize: 13\n        },\n        Password: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }\n      }, \"Already have an account?\", ' ', React.createElement(Text, {\n        style: {\n          color: '#71ccf0',\n          fontWeight: '500'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }, \"Sign In\"))))));\n    }\n  }]);\n\n  return RegisterScreen;\n}(React.Component);\n\nRegisterScreen.navigationOptions = {\n  header: function header() {\n    return false;\n  }\n};\nexport { RegisterScreen as default };","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Authentication/RegisterScreen.js"],"names":["React","Auth","appStyle","authStyle","ConfirmCodePopup","AnimatedMultistep","Step1","Step2","RegistrationFinal","allSteps","name","component","RegisterScreen","state","username","password","phone","street","city","apartmentNo","userId","errorMessage","message","signedUp","authCode","confirmingCode","isLoading","handleSignUp","finalState","setState","console","log","address","passwordRegex","RegExp","test","signUp","attributes","email","phone_number","replace","then","response","error","userSub","catch","confirmSignUp","user","err","onNext","onBack","finish","loadingElement","loadingHolder","errorElement","messageElement","confirmPopupElement","container","iconHolder","icon","require","greeting","appName","authForm","alignSelf","marginTop","color","fontSize","fontWeight","props","navigation","navigate","Component","navigationOptions","header"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  ActivityIndicator,\n  KeyboardAvoidingView,\n  ScrollView,\n} from 'react-native';\nimport { Auth } from 'aws-amplify';\nimport appStyle from '../../styles/AppStyle';\nimport authStyle from '../../styles/AuthStyle';\nimport ConfirmCodePopup from '../../components/popup/ConfirmCodePopup';\n\nimport AnimatedMultistep from 'react-native-animated-multistep';\nimport Step1 from './RegisterStep1';\nimport Step2 from './RegisterStep2';\nimport RegistrationFinal from './RegistrationFinal';\n\nconst allSteps = [\n  { name: 'step 1', component: Step1 },\n  { name: 'step 2', component: Step2 },\n  { name: 'step 3', component: RegistrationFinal },\n];\n\nexport default class RegisterScreen extends React.Component {\n  static navigationOptions = {\n    header: () => false,\n  };\n  state = {\n    name: '',\n    username: '',\n    password: '',\n    phone: '',\n    street: '',\n    city: '',\n    state: '',\n    apartmentNo: '',\n    userId: null,\n    errorMessage: null,\n    message: null,\n    signedUp: false,\n    authCode: '',\n    confirmingCode: false,\n    isLoading: false,\n  };\n\n  handleSignUp = async (finalState) => {\n    this.setState({ errorMessage: '' });\n    this.setState({ message: '' });\n    this.setState({ isLoading: true });\n    console.log('street: ' + street);\n    const {\n      address,\n      city,\n      name,\n      password,\n      phone,\n      street,\n      state,\n      username,\n    } = finalState;\n\n    const passwordRegex = new RegExp(\n      '^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$',\n      'g'\n    );\n    if (name === '') this.setState({ errorMessage: 'Missing name' });\n    else if (username === '')\n      this.setState({ errorMessage: 'Missing email address' });\n    else if (password === '')\n      this.setState({ errorMessage: 'Missing password' });\n    else if (passwordRegex.test(password) == false)\n      this.setState({\n        errorMessage:\n          'Password Must contain 8 characters, a number, a symbol, an upper case letter, and a lower case letter',\n      });\n    else {\n      console.log(username, password, name);\n      const response = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          name,\n          email: username,\n          phone_number: '+1' + phone.replace(/\\D/g, ''),\n          address: street,\n          'custom:city': city,\n          'custom:state': state,\n        },\n      })\n        .then((response) => {\n          this.setState({\n            error: null,\n            userId: response.userSub,\n            signedUp: true,\n            message: 'A confirmation code was sent to your email! ',\n          });\n          this.setState({ errorMessage: '' });\n          this.setState({ confirmingCode: true }); // According to Mamtaj's feedback, open confirm code popup to save user time.\n          console.log('sign up successful!');\n          console.log(response.userSub);\n        })\n        .catch((error) => {\n          this.setState({ errorMessage: error.message });\n          console.log('Error', error.message);\n        });\n    }\n    this.setState({ isLoading: false });\n  };\n\n  // Verify sign up code\n  confirmSignUp = async (username, authCode) => {\n    this.setState({ errorMessage: '' });\n    this.setState({ message: '' });\n    this.setState({ confirmingCode: false });\n\n    // Form validation\n    if (username == '') {\n      this.setState({ message: \"Please enter the email you're verifying\" });\n      this.setState({ errorMessage: '' });\n    } else if (authCode == '') {\n      this.setState({ message: 'Please enter the code sent to your email' });\n      this.setState({ errorMessage: '' });\n    } else {\n      this.setState({ isLoading: true });\n      const user = await Auth.confirmSignUp(username, authCode)\n        .then(async (user) => {\n          console.log('confirmed sign up successful!');\n\n          this.setState({ errorMessage: '' });\n          this.setState({ message: 'Confirm successful, please sign in.' });\n          this.setState({ isLoading: false });\n        })\n        .catch((err) => {\n          this.setState({ errorMessage: err.message });\n          this.setState({ message: '' });\n          this.setState({ isLoading: false });\n        });\n    }\n  };\n\n  onNext = () => {\n    console.log('Next');\n  };\n\n  /* define the method to be called when you go on back step */\n\n  onBack = () => {\n    console.log('Back');\n  };\n\n  /* define the method to be called when the wizard is finished */\n\n  finish = (finalState) => {\n    this.handleSignUp(finalState);\n    console.log(finalState);\n  };\n\n  render() {\n    // The loading element will restrict input during networked operations\n    let loadingElement = null;\n    if (this.state.isLoading) {\n      loadingElement = (\n        <View style={[appStyle.loadingHolder]}>\n          <ActivityIndicator size=\"large\" style={[appStyle.loadingElement]} />\n        </View>\n      );\n    }\n\n    // The error element will be set if there is actually an error\n    let errorElement = null;\n    if (this.state.errorMessage) {\n      errorElement = (\n        <View style={authStyle.errorMessage}>\n          {this.state.errorMessage && (\n            <Text style={authStyle.errorMessage}>\n              {this.state.errorMessage}\n            </Text>\n          )}\n        </View>\n      );\n    }\n    // The message element will be set if there is actually an error\n    let messageElement = null;\n    if (this.state.message) {\n      messageElement = (\n        <View style={authStyle.message}>\n          {this.state.message && (\n            <Text style={authStyle.message}>{this.state.message}</Text>\n          )}\n        </View>\n      );\n    }\n\n    // The confirm code popup will appear if there is actually an error\n    let confirmPopupElement = null;\n    if (this.state.confirmingCode) {\n      confirmPopupElement = (\n        <ConfirmCodePopup\n          onCancel={() => this.setState({ confirmingCode: false })}\n          onSubmit={this.confirmSignUp}\n          username={this.state.username}\n        />\n      );\n    }\n\n    return (\n      <KeyboardAvoidingView\n        enabled={true}\n        behavior=\"height\"\n        style={authStyle.container}\n      >\n        <ScrollView style={authStyle.container} bounces={false}>\n          {/* Render the loading element */}\n          {loadingElement}\n\n          {/* Render the Confirm Popup */}\n          {confirmPopupElement}\n\n          {/* Render the app icon */}\n          <View style={authStyle.iconHolder}>\n            <Image\n              style={authStyle.icon}\n              source={require('../../assets/MISUv2.png')}\n            />\n          </View>\n\n          {/* Render the greeting */}\n          <Text style={authStyle.greeting}>\n            {`Create your`}\n            <Text style={authStyle.appName}> {'MiSu'} </Text>\n            account\n          </Text>\n\n          {/* Render the register form */}\n          <View style={authStyle.authForm}>\n            <AnimatedMultistep\n              steps={allSteps}\n              onFinish={this.finish}\n              onBack={this.onBack}\n              onNext={this.onNext}\n              comeInOnNext=\"bounceInUp\"\n              OutOnNext=\"bounceOutDown\"\n              comeInOnBack=\"bounceInDown\"\n              OutOnBack=\"bounceOutUp\"\n            />\n          </View>\n\n          {/* Render the submit button \n          <View style={authStyle.authFormButtonHolder}>\n            <TouchableOpacity\n              style={authStyle.authFormButton}\n              onPress={this.handleSignUp}\n            >\n              <Text style={{ color: '#FFF', fontWeight: '500' }}>Sign up</Text>\n            </TouchableOpacity>\n          </View>*/}\n\n          {/* Render the error message */}\n          {errorElement}\n\n          {/* Render the message */}\n          {messageElement}\n\n          {/* Render the confirm code toggle */}\n          <View>\n            <TouchableOpacity\n              style={{ alignSelf: 'center', marginTop: 16 }}\n              onPress={() => {\n                this.setState({ confirmingCode: true });\n              }}\n            >\n              <Text style={{ color: '#414959', fontSize: 13 }} Password>\n                Have a confirmation code?{' '}\n                <Text style={{ color: '#71ccf0', fontWeight: '500' }}>\n                  Confirm\n                </Text>\n              </Text>\n            </TouchableOpacity>\n          </View>\n\n          {/* Render the register toggle */}\n          <View>\n            <TouchableOpacity\n              style={{ alignSelf: 'center' }}\n              onPress={() => this.props.navigation.navigate('Login')}\n            >\n              <Text style={{ color: '#414959', fontSize: 13 }} Password>\n                Already have an account?{' '}\n                <Text style={{ color: '#71ccf0', fontWeight: '500' }}>\n                  Sign In\n                </Text>\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}