{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Application/AccountScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Auth } from 'aws-amplify';\nimport React from 'react';\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { connect } from 'react-redux';\nimport AppText from \"../../components/app/AppText\";\nimport AccountCard from \"../../components/cards/AccountCard\";\nimport ProfileCard from \"../../components/cards/ProfileCard\";\nimport SettingsCard from \"../../components/cards/SettingsCard\";\nimport YourHubCard from \"../../components/cards/YourHubCard\";\nimport { getHubInfoAction } from \"../../redux/Action/getHubInfoAction\";\nimport { registerHubAction } from \"../../redux/Action/registerHubAction\";\nimport appStyle from \"../../styles/AppStyle\";\n\nfunction AccountScreen(props) {\n  signOut = function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ToastAndroid.show('Signing out!', ToastAndroid.LONG);\n            Auth.signOut().then(function () {}).then(function () {\n              props.navigation.navigate('Login');\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  viewLogs = function viewLogs() {\n    props.navigation.navigate('Log');\n  };\n\n  return React.createElement(View, {\n    style: appStyle.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, React.createElement(AccountCard, {\n    idToken: props.sessionData.idToken,\n    user: props.hubInfoData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }), React.createElement(ProfileCard, {\n    idToken: props.sessionData.idToken,\n    user: props.hubInfoData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }), React.createElement(YourHubCard, {\n    register: props.register,\n    idToken: props.sessionData.idToken,\n    user: props.hubInfoData,\n    hub_url: props.hubInfoData.hub_url,\n    hub_email: props.hubInfoData.hub_email,\n    navigation: props.navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }), React.createElement(SettingsCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [{\n      marginHorizontal: 50,\n      marginBottom: 10\n    }, appStyle.redButton],\n    onPress: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, React.createElement(AppText, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"Log out\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var hubInfoData = state.hubInfoData,\n      sessionData = state.sessionData,\n      sharedAccountsData = state.sharedAccountsData,\n      registerData = state.registerData;\n  return {\n    hubInfoData: hubInfoData,\n    sessionData: sessionData,\n    sharedAccountsData: sharedAccountsData,\n    registerData: registerData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    register: function register(data, idToken) {\n      return dispatch(registerHubAction(data, idToken));\n    },\n    getHub: function getHub(idToken) {\n      return dispatch(getHubInfoAction(idToken));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountScreen);","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/screens/Application/AccountScreen.js"],"names":["Auth","React","Icon","connect","AppText","AccountCard","ProfileCard","SettingsCard","YourHubCard","getHubInfoAction","registerHubAction","appStyle","AccountScreen","props","signOut","ToastAndroid","show","LONG","then","navigation","navigate","viewLogs","container","sessionData","idToken","hubInfoData","register","hub_url","hub_email","marginHorizontal","marginBottom","redButton","color","mapStateToProps","state","sharedAccountsData","registerData","mapDispatchToProps","dispatch","data","getHub"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,IAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,SAASC,gBAAT;AACA,SAASC,iBAAT;AACA,OAAOC,QAAP;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAiB7BC,EAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAETC,YAAAA,YAAY,CAACC,IAAb,CAAkB,cAAlB,EAAkCD,YAAY,CAACE,IAA/C;AACAjB,YAAAA,IAAI,CAACc,OAAL,GACEI,IADF,CACO,YAAM,CAEX,CAHF,EAIEA,IAJF,CAIO,YAAM;AACXL,cAAAA,KAAK,CAACM,UAAN,CAAiBC,QAAjB,CAA0B,OAA1B;AACA,aANF;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;;AAYAC,EAAAA,QAAQ,GAAG,oBAAM;AAChBR,IAAAA,KAAK,CAACM,UAAN,CAAiBC,QAAjB,CAA0B,KAA1B;AACA,GAFD;;AAUG,SACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,QAAQ,CAACW,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,WAAD;AACC,IAAA,OAAO,EAAET,KAAK,CAACU,WAAN,CAAkBC,OAD5B;AAEC,IAAA,IAAI,EAAEX,KAAK,CAACY,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAKC,oBAAC,WAAD;AACC,IAAA,OAAO,EAAEZ,KAAK,CAACU,WAAN,CAAkBC,OAD5B;AAEC,IAAA,IAAI,EAAEX,KAAK,CAACY,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,EASC,oBAAC,WAAD;AACC,IAAA,QAAQ,EAAEZ,KAAK,CAACa,QADjB;AAEC,IAAA,OAAO,EAAEb,KAAK,CAACU,WAAN,CAAkBC,OAF5B;AAGC,IAAA,IAAI,EAAEX,KAAK,CAACY,WAHb;AAIC,IAAA,OAAO,EAAEZ,KAAK,CAACY,WAAN,CAAkBE,OAJ5B;AAKC,IAAA,SAAS,EAAEd,KAAK,CAACY,WAAN,CAAkBG,SAL9B;AAMC,IAAA,UAAU,EAAEf,KAAK,CAACM,UANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,EAiBC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBD,EAkBC,oBAAC,gBAAD;AACC,IAAA,KAAK,EAAE,CAAC;AAAEU,MAAAA,gBAAgB,EAAE,EAApB;AAAwBC,MAAAA,YAAY,EAAE;AAAtC,KAAD,EAA6CnB,QAAQ,CAACoB,SAAtD,CADR;AAEC,IAAA,OAAO,EAAEjB,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAE;AAAT,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJD,CAlBD,CADE;AA4BH;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,MAAQT,WAAR,GAAuES,KAAvE,CAAQT,WAAR;AAAA,MAAqBF,WAArB,GAAuEW,KAAvE,CAAqBX,WAArB;AAAA,MAAkCY,kBAAlC,GAAuED,KAAvE,CAAkCC,kBAAlC;AAAA,MAAsDC,YAAtD,GAAuEF,KAAvE,CAAsDE,YAAtD;AACA,SAAO;AAAEX,IAAAA,WAAW,EAAXA,WAAF;AAAeF,IAAAA,WAAW,EAAXA,WAAf;AAA4BY,IAAAA,kBAAkB,EAAlBA,kBAA5B;AAAgDC,IAAAA,YAAY,EAAZA;AAAhD,GAAP;AACA,CAHD;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAO;AACNZ,IAAAA,QAAQ,EAAE,kBAACa,IAAD,EAAOf,OAAP;AAAA,aAAmBc,QAAQ,CAAC5B,iBAAiB,CAAC6B,IAAD,EAAOf,OAAP,CAAlB,CAA3B;AAAA,KADJ;AAENgB,IAAAA,MAAM,EAAE,gBAAChB,OAAD;AAAA,aAAac,QAAQ,CAAC7B,gBAAgB,CAACe,OAAD,CAAjB,CAArB;AAAA;AAFF,GAAP;AAIA,CALD;;AAOA,eAAerB,OAAO,CAAC8B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CzB,aAA7C,CAAf","sourcesContent":["import { Auth } from 'aws-amplify';\nimport React from 'react';\nimport { ToastAndroid, TouchableOpacity, View, Text } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { connect } from 'react-redux';\nimport AppText from '../../components/app/AppText';\nimport AccountCard from '../../components/cards/AccountCard';\nimport ProfileCard from '../../components/cards/ProfileCard';\nimport SettingsCard from '../../components/cards/SettingsCard';\nimport YourHubCard from '../../components/cards/YourHubCard';\nimport { getHubInfoAction } from '../../redux/Action/getHubInfoAction';\nimport { registerHubAction } from '../../redux/Action/registerHubAction';\nimport appStyle from '../../styles/AppStyle';\n\nfunction AccountScreen(props) {\n\t// static navigationOptions = ({ navigate, navigation }) => ({\n\t// \theaderTitle: 'Account',\n\t// \theaderLeft: () => (\n\t// \t\t<View>\n\t// \t\t\t<TouchableOpacity\n\t// \t\t\t\tstyle={{ alignSelf: 'center', marginTop: 16 }}\n\t// \t\t\t\tonPress={() => navigation.navigate('Home')}\n\t// \t\t\t>\n\t// \t\t\t\t<Icon name=\"arrow-back\" size={35} style={{ marginLeft: 16, marginBottom: 10 }} />\n\t// \t\t\t</TouchableOpacity>\n\t// \t\t</View>\n\t// \t),\n\t// \theaderRight: () => <View></View>\n\t// });\n\n\t// Signs the user out and sends them back to the login screen\n\tsignOut = async () => {\n\t\t// props.screenProps.setLoadingTrue();\n\t\tToastAndroid.show('Signing out!', ToastAndroid.LONG);\n\t\tAuth.signOut()\n\t\t\t.then(() => {\n\t\t\t\t// props.screenProps.setLoadingFalse();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tprops.navigation.navigate('Login');\n\t\t\t});\n\t};\n\n\tviewLogs = () => {\n\t\tprops.navigation.navigate('Log');\n\t};\n\n\t// UNSAFE_componentWillReceiveProps(props) {\n\t// \tif (props.registerData) {\n\t// \t\tthis.props.getHub(this.props.sessionData.idToken);\n\t// \t}\n\t// }\n    // console.log(props);\n    return (\n\t\t<View style={appStyle.container}>\n\t\t\t<AccountCard\n\t\t\t\tidToken={props.sessionData.idToken}\n\t\t\t\tuser={props.hubInfoData}\n\t\t\t/>\n\t\t\t<ProfileCard\n\t\t\t\tidToken={props.sessionData.idToken}\n\t\t\t\tuser={props.hubInfoData}\n\t\t\t/>\n\t\t\t<YourHubCard\n\t\t\t\tregister={props.register}\n\t\t\t\tidToken={props.sessionData.idToken}\n\t\t\t\tuser={props.hubInfoData}\n\t\t\t\thub_url={props.hubInfoData.hub_url}\n\t\t\t\thub_email={props.hubInfoData.hub_email}\n\t\t\t\tnavigation={props.navigation}\n\t\t\t/>\n\t\t\t<SettingsCard />\n\t\t\t<TouchableOpacity\n\t\t\t\tstyle={[{ marginHorizontal: 50, marginBottom: 10 }, appStyle.redButton]}\n\t\t\t\tonPress={signOut}\n\t\t\t>\n\t\t\t\t<AppText style={{ color: 'white' }}>Log out</AppText>\n\t\t\t</TouchableOpacity>\n\t\t</View>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n\tconst { hubInfoData, sessionData, sharedAccountsData, registerData } = state;\n\treturn { hubInfoData, sessionData, sharedAccountsData, registerData };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tregister: (data, idToken) => dispatch(registerHubAction(data, idToken)),\n\t\tgetHub: (idToken) => dispatch(getHubInfoAction(idToken))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountScreen);"]},"metadata":{},"sourceType":"module"}