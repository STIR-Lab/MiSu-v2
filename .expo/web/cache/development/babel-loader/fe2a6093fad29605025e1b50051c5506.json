{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/App.js\",\n    _this = this;\n\nimport Amplify from '@aws-amplify/core';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport config from \"./aws-exports\";\nimport HubCardSharedUsersListEntry from \"./components/cards/ListEntries/HubCardSharedUsersListEntry\";\nimport appDataReducer from \"./redux/AppDataReducer\";\nimport AccountScreen from \"./screens/Application/AccountScreen\";\nimport DeviceScreen from \"./screens/Application/DeviceScreen\";\nimport LogScreen from \"./screens/Application/LogScreen\";\nimport UserScreen from \"./screens/Application/UserScreen\";\nimport HubScreen from \"./screens/Application/HubScreen\";\nimport LoginScreen from \"./screens/Authentication/LoginScreen\";\nimport RegisterScreen from \"./screens/Authentication/RegisterScreen\";\nimport HomeScreen from \"./screens/index\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nAmplify.configure(config);\nvar store = createStore(appDataReducer, applyMiddleware(thunk));\nvar HomeNav = createStackNavigator();\n\nfunction HomeStack() {\n  return React.createElement(HomeNav.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeNav.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeNav.Screen, {\n    name: \"Device\",\n    component: DeviceScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ProfileNav = createStackNavigator();\n\nfunction ProfileStack() {\n  return React.createElement(ProfileNav.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileNav.Screen, {\n    name: \"Account\",\n    component: AccountScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), React.createElement(ProfileNav.Screen, {\n    name: \"Hub\",\n    component: HubScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar NavBar = createBottomTabNavigator();\n\nfunction AppNavBar() {\n  return React.createElement(NavBar.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, React.createElement(NavBar.Screen, {\n    name: \"HomeStack\",\n    component: HomeStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), React.createElement(NavBar.Screen, {\n    name: \"Devices\",\n    component: DeviceScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), React.createElement(NavBar.Screen, {\n    name: \"Logs\",\n    component: LogScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), React.createElement(NavBar.Screen, {\n    name: \"Profile\",\n    component: ProfileStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar customAnimationFunc = function customAnimationFunc() {\n  return {\n    screenInterpolator: function screenInterpolator(sceneProps) {\n      return CardStackStyleInterpolator.forHorizontal(sceneProps);\n    }\n  };\n};\n\nvar Auth = createStackNavigator();\n\nvar AuthStack = function AuthStack(props) {\n  return React.createElement(Auth.Navigator, {\n    initialRouteName: \"Login\",\n    screenOptions: {\n      animationEnabled: false\n    },\n    headerMode: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, React.createElement(Auth.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    initialParams: {\n      setLoadingTrue: props.setLoadingTrue,\n      setLoadingFalse: props.setLoadingFalse,\n      setGoToAuthFalse: props.setGoToAuthFalse,\n      setGoToAppTrue: props.setGoToAppTrue\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), React.createElement(Auth.Screen, {\n    name: \"Register\",\n    component: RegisterScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), React.createElement(Auth.Screen, {\n    name: \"App\",\n    component: AppNavBar,\n    initialParams: {\n      setLoadingTrue: props.setLoadingTrue,\n      setLoadingFalse: props.setLoadingFalse\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default function App(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goToAuth = _useState4[0],\n      setGoToAuth = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      goToApp = _useState6[0],\n      setGoToApp = _useState6[1];\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, React.createElement(Spinner, {\n    visible: loading,\n    textContent: 'Loading...',\n    textStyle: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, goToApp == false && goToAuth == false && React.createElement(LoadingScreen, {\n    setGoToAuthTrue: setGoToAuth,\n    setGoToAppTrue: setGoToApp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }), goToAuth == true && React.createElement(AuthStack, {\n    setLoadingTrue: setLoading,\n    setGoToAppTrue: setGoToApp,\n    setLoadingFalse: setLoading,\n    setGoToAuthFalse: setGoToAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/App.js"],"names":["Amplify","React","useState","Spinner","Provider","applyMiddleware","createStore","thunk","config","HubCardSharedUsersListEntry","appDataReducer","AccountScreen","DeviceScreen","LogScreen","UserScreen","HubScreen","LoginScreen","RegisterScreen","HomeScreen","LoadingScreen","NavigationContainer","createStackNavigator","createBottomTabNavigator","configure","store","HomeNav","HomeStack","headerShown","ProfileNav","ProfileStack","NavBar","AppNavBar","customAnimationFunc","screenInterpolator","sceneProps","CardStackStyleInterpolator","forHorizontal","Auth","AuthStack","props","animationEnabled","setLoadingTrue","setLoadingFalse","setGoToAuthFalse","setGoToAppTrue","App","loading","setLoading","goToAuth","setGoToAuth","goToApp","setGoToApp","flex","color"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAOC,OAAP,MAAoB,sCAApB;AAKA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP;AACA,OAAOC,2BAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AAKA,OAAOC,WAAP;AACA,OAAOC,cAAP;AAKA,OAAOC,UAAP;AAKA,OAAOC,aAAP;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEAtB,OAAO,CAACuB,SAAR,CAAkBf,MAAlB;AAEA,IAAMgB,KAAK,GAAGlB,WAAW,CAACI,cAAD,EAAiBL,eAAe,CAACE,KAAD,CAAhC,CAAzB;AAyBA,IAAMkB,OAAO,GAAGJ,oBAAoB,EAApC;;AAEA,SAASK,SAAT,GAAqB;AACnB,SACE,oBAAC,OAAD,CAAS,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,IAAI,EAAC,MAArB;AAA4B,IAAA,SAAS,EAAER,UAAvC;AAAmD,IAAA,OAAO,EAAE;AAACS,MAAAA,WAAW,EAAE;AAAd,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,IAAI,EAAC,QAArB;AAA8B,IAAA,SAAS,EAAEf,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AACD,IAAMgB,UAAU,GAAGP,oBAAoB,EAAvC;;AAEA,SAASQ,YAAT,GAAwB;AACtB,SACE,oBAAC,UAAD,CAAY,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,CAAY,MAAZ;AAAmB,IAAA,IAAI,EAAC,SAAxB;AAAkC,IAAA,SAAS,EAAElB,aAA7C;AAA4D,IAAA,OAAO,EAAE;AAACgB,MAAAA,WAAW,EAAE;AAAd,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD,CAAY,MAAZ;AAAmB,IAAA,IAAI,EAAC,KAAxB;AAA8B,IAAA,SAAS,EAAEZ,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,IAAMe,MAAM,GAAGR,wBAAwB,EAAvC;;AAEA,SAASS,SAAT,GAAqB;AACnB,SACE,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,WAApB;AAAgC,IAAA,SAAS,EAAEL,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAEd,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,SAAS,EAAEC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAEgB,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAGD,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAO;AACjCC,IAAAA,kBAAkB,EAAE,4BAACC,UAAD,EAAgB;AAClC,aAAOC,0BAA0B,CAACC,aAA3B,CAAyCF,UAAzC,CAAP;AACD;AAHgC,GAAP;AAAA,CAA5B;;AA4BA,IAAMG,IAAI,GAAGhB,oBAAoB,EAAjC;;AACC,IAAMiB,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,SACf,oBAAC,IAAD,CAAM,SAAN;AACI,IAAA,gBAAgB,EAAC,OADrB;AAEI,IAAA,aAAa,EAAE;AACbC,MAAAA,gBAAgB,EAAE;AADL,KAFnB;AAKI,IAAA,UAAU,EAAC,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,IAAI,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAExB,WAArC;AACI,IAAA,aAAa,EAAE;AACXyB,MAAAA,cAAc,EAAEF,KAAK,CAACE,cADX;AAEXC,MAAAA,eAAe,EAAEH,KAAK,CAACG,eAFZ;AAGXC,MAAAA,gBAAgB,EAAEJ,KAAK,CAACI,gBAHb;AAIXC,MAAAA,cAAc,EAAEL,KAAK,CAACK;AAJX,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAcI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,SAAS,EAAE3B,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAeI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,IAAI,EAAC,KAAlB;AAAwB,IAAA,SAAS,EAAEc,SAAnC;AACE,IAAA,aAAa,EAAE;AACbU,MAAAA,cAAc,EAAEF,KAAK,CAACE,cADT;AAEbC,MAAAA,eAAe,EAAEH,KAAK,CAACG;AAFV,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CADe;AAAA,CAAlB;;AAuBD,eAAe,SAASG,GAAT,CAAaN,KAAb,EAAoB;AACjC,kBAA8BrC,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAO4C,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgC7C,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAO8C,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8B/C,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOgD,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE3B,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE4B,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEN,OADX;AAEE,IAAA,WAAW,EAAE,YAFf;AAGE,IAAA,SAAS,EAAE;AACTO,MAAAA,KAAK,EAAE;AADE,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,OAAO,IAAI,KAAX,IAAoBF,QAAQ,IAAI,KAAhC,IACE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAEC,WAAhC;AAA6C,IAAA,cAAc,EAAEE,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,EAGIH,QAAQ,IAAI,IAAZ,IACE,oBAAC,SAAD;AAAW,IAAA,cAAc,EAAID,UAA7B;AACI,IAAA,cAAc,EAAEI,UADpB;AAEI,IAAA,eAAe,EAAEJ,UAFrB;AAGI,IAAA,gBAAgB,EAAEE,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,CARF,CADF,CADF;AA+BD","sourcesContent":["import Amplify from '@aws-amplify/core';\nimport React, { useState } from 'react';\nimport { View, Text } from 'react-native';\nimport Spinner from 'react-native-loading-spinner-overlay';\n// import { createStackNavigator } from 'react-navigation-stack';\n// ************************************************ */\n// Redux ****************************************** */\n// ************************************************ */\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport config from './aws-exports';\nimport HubCardSharedUsersListEntry from './components/cards/ListEntries/HubCardSharedUsersListEntry';\nimport appDataReducer from './redux/AppDataReducer';\nimport AccountScreen from './screens/Application/AccountScreen';\nimport DeviceScreen from './screens/Application/DeviceScreen';\nimport LogScreen from './screens/Application/LogScreen';\nimport UserScreen from './screens/Application/UserScreen';\nimport HubScreen from './screens/Application/HubScreen';\n//************************************************** */\n// Auth Stack ************************************** */\n//************************************************** */\n// Login/Register screens hold the code that mess with the firebase auth(login)\nimport LoginScreen from './screens/Authentication/LoginScreen';\nimport RegisterScreen from './screens/Authentication/RegisterScreen';\n//************************************************** */\n// App Stack *************************************** */\n//************************************************** */\n// Main screen holding all the logic essentially\nimport HomeScreen from './screens/index';\n//************************************************** */\n// Loading Stack *********************************** */\n//************************************************** */\n// Routing container which swaps screens and adds them to the navigation stack(back button function properly on Android)\nimport LoadingScreen from './screens/LoadingScreen';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nAmplify.configure(config);\n\nconst store = createStore(appDataReducer, applyMiddleware(thunk));\n\n// const AppStack = createStackNavigator(\n//   {\n//     Home: HomeScreen,\n//     Account: AccountScreen,\n//     Device: DeviceScreen,\n//     User: UserScreen,\n//     Log: LogScreen,\n//     Hub: HubScreen,\n//   },\n//   {\n//     mode: 'card',\n//     navigationOptions: (params) => (\n//       {\n//         gesturesEnabled: true,\n//         gesturesDirection: 'inverted',\n//         headerMode: 'float',\n//       },\n//       {\n//         transitionConfig: customAnimationFunc,\n//       }\n//     ),\n//   }\n//  );\nconst HomeNav = createStackNavigator();\n\nfunction HomeStack() {\n  return(\n    <HomeNav.Navigator>\n      <HomeNav.Screen name=\"Home\" component={HomeScreen} options={{headerShown: false}}/>\n      <HomeNav.Screen name=\"Device\" component={DeviceScreen} />\n    </HomeNav.Navigator>\n  )\n}\nconst ProfileNav = createStackNavigator();\n\nfunction ProfileStack() {\n  return(\n    <ProfileNav.Navigator>\n      <ProfileNav.Screen name=\"Account\" component={AccountScreen} options={{headerShown: false}}/>\n      <ProfileNav.Screen name=\"Hub\" component={HubScreen}/>\n    </ProfileNav.Navigator>\n  )\n}\n\nconst NavBar = createBottomTabNavigator();\n\nfunction AppNavBar() {\n  return(\n    <NavBar.Navigator>\n      <NavBar.Screen name=\"HomeStack\" component={HomeStack} />\n      <NavBar.Screen name=\"Devices\" component={DeviceScreen} />\n      <NavBar.Screen name=\"Logs\" component={LogScreen} />\n      <NavBar.Screen name=\"Profile\" component={ProfileStack} />\n    </NavBar.Navigator>\n  )\n}\n\n\nconst customAnimationFunc = () => ({\n  screenInterpolator: (sceneProps) => {\n    return CardStackStyleInterpolator.forHorizontal(sceneProps);\n  },\n});\n\n// const AuthStack = createStackNavigator(\n//   {\n//     Login: LoginScreen,\n//     Register: RegisterScreen,\n//   },\n//   {\n//     mode: 'card',\n//     navigationOptions: (params) => (\n//       {\n//         gesturesEnabled: true,\n//         gesturesDirection: 'inverted',\n//         headerMode: 'none',\n//         headerShown: false,\n//       },\n//       {\n//         transitionConfig: customAnimationFunc,\n//       }\n//     ),\n//   }\n// );\n\n\nconst Auth = createStackNavigator();\n const AuthStack = (props) => (\n    <Auth.Navigator \n        initialRouteName=\"Login\"\n        screenOptions={{\n          animationEnabled: false\n        }}\n        headerMode='none'\n    >\n        {/* {console.log(\"AuthStack props \", props)} */}\n        <Auth.Screen name=\"Login\" component={LoginScreen} \n            initialParams={{\n                setLoadingTrue: props.setLoadingTrue,\n                setLoadingFalse: props.setLoadingFalse,\n                setGoToAuthFalse: props.setGoToAuthFalse,\n                setGoToAppTrue: props.setGoToAppTrue}}/>\n        <Auth.Screen name=\"Register\" component={RegisterScreen} />\n        <Auth.Screen name=\"App\" component={AppNavBar} \n          initialParams={{\n            setLoadingTrue: props.setLoadingTrue,\n            setLoadingFalse: props.setLoadingFalse}}/>\n    </Auth.Navigator>\n )\n\nexport default function App(props) {\n  const [loading, setLoading] = useState(false);\n  const [goToAuth, setGoToAuth] = useState(false);\n  const [goToApp, setGoToApp] = useState(false);\n\n  return (\n    <Provider store={store}>\n      <View style={{ flex: 1 }}>\n        <Spinner\n          visible={loading}\n          textContent={'Loading...'}\n          textStyle={{\n            color: '#FFF',\n          }}\n        />\n        <NavigationContainer>\n          { goToApp == false && goToAuth == false && \n              <LoadingScreen setGoToAuthTrue={setGoToAuth} setGoToAppTrue={setGoToApp}/>}\n          { goToAuth == true && \n              <AuthStack setLoadingTrue = {setLoading} \n                  setGoToAppTrue={setGoToApp} \n                  setLoadingFalse={setLoading}\n                  setGoToAuthFalse={setGoToAuth}/>}\n          {/* { this.state.goToApp == true &&\n              <AppNavBar/>\n          } */}\n        </NavigationContainer>\n        {/* <AppContainer\n          screenProps={{\n            setLoadingFalse: this.setLoadingFalse.bind(this),\n            setLoadingTrue: this.setLoadingTrue.bind(this),\n          }}\n        /> */}\n      </View>\n    </Provider>\n  );\n}\n\n// Create App Navigator\n// const AppContainer = createAppContainer(\n//     createSwitchNavigator(\n//       {\n//         Loading: LoadingScreen,\n//         Auth: AuthStack,\n//         App: AppStack,\n//       },\n//       {\n//         // Starts the app off on the loading screen?\n//         initialRouteName: 'Loading',\n//       }\n//     )\n//   );"]},"metadata":{},"sourceType":"module"}