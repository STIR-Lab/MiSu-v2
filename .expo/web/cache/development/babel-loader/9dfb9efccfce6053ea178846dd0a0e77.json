{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/components/cards/DeviceCard.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport getDeviceIcon from \"../app/DeviceIcons\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { Slider } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport AppHeaderText from \"../app/AppHeaderText\";\nimport AppText from \"../app/AppText\";\nimport appStyle from \"../../styles/AppStyle\";\nimport Moment from 'moment';\n\nvar RenderAccess = function RenderAccess(props) {\n  function formatDate(time) {\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n    if (time.length > 1) {\n      time = time.slice(1);\n      time[5] = +time[0] < 12 ? 'AM' : 'PM';\n      time[0] = +time[0] % 12 || 12;\n    }\n\n    return time.join('');\n  }\n\n  var firstProp = props.curVal;\n  var firstPropTimeRangeReoccuringStr = '';\n  if (firstProp.time_range_reoccuring == '' || firstProp.time_range_reoccuring == null) firstPropTimeRangeReoccuringStr = 'Everyday  ';else {\n    var tempCount = 0;\n\n    for (var i = 0; i < firstProp.time_range_reoccuring.length + 1; i++) {\n      if (tempCount >= 3 && i <= firstProp.time_range_reoccuring.length) {\n        tempCount = 0;\n        var dayCut = firstProp.time_range_reoccuring.substring(i - 3, i);\n        firstPropTimeRangeReoccuringStr += dayCut + ', ';\n      }\n\n      tempCount++;\n    }\n  }\n  firstPropTimeRangeReoccuringStr = firstPropTimeRangeReoccuringStr.substring(0, firstPropTimeRangeReoccuringStr.length - 2);\n  return React.createElement(View, {\n    style: [appStyle.row, {\n      marginLeft: -5,\n      marginTop: 2\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, firstProp.unrestricted == 1 && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(AppText, {\n    style: {\n      fontSize: 14,\n      fontStyle: 'italic',\n      marginTop: -4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"* Unrestricted Access\")), firstProp.time_range == 1 && React.createElement(View, {\n    style: [{\n      marginTop: -15,\n      top: 0\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [appStyle.rowRight, {\n      right: 10,\n      top: 32\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, React.createElement(AppText, {\n    style: {\n      fontSize: 12,\n      fontStyle: 'italic',\n      marginTop: -4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, firstPropTimeRangeReoccuringStr)), React.createElement(View, {\n    style: appStyle.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, React.createElement(AppText, {\n    style: {\n      fontSize: 14,\n      fontStyle: 'italic',\n      marginTop: -4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Scheduled \", firstProp.time_range_start_date.slice(0, -3), \" @\", ' ', formatDate(firstProp.time_range_start)), React.createElement(AppText, {\n    style: {\n      fontSize: 14,\n      fontStyle: 'italic',\n      marginTop: -4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, ' ', \"to \", firstProp.time_range_end_date.slice(0, -3), \" @\", ' ', formatDate(firstProp.time_range_end)))), firstProp.temporary == 1 && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(AppText, {\n    style: {\n      fontSize: 14,\n      fontStyle: 'italic',\n      marginTop: -4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Temporary until \", firstProp.temp_date.slice(0, -3), \",\", ' ', formatDate(firstProp.temp_time_range_end))));\n};\n\nvar DeviceCard = function (_Component) {\n  _inherits(DeviceCard, _Component);\n\n  var _super = _createSuper(DeviceCard);\n\n  function DeviceCard() {\n    var _this2;\n\n    _classCallCheck(this, DeviceCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      owned: true,\n      switchVals: [],\n      minVal: 0,\n      maxVal: 100,\n      device: null,\n      slider: 0,\n      text: '',\n      loading: false\n    };\n\n    _this2.showToast = function (text) {\n      ToastAndroid.show(text, ToastAndroid.LONG);\n    };\n\n    _this2.canAccess = function (temp) {\n      var dateTime = new Date();\n      var localTime = dateTime.toLocaleTimeString('en-US', {\n        hour12: false,\n        hour: '2-digit',\n        minute: '2-digit',\n        timeZone: 'America/New_York'\n      });\n      localTime = localTime.substring(0, localTime.length - 3);\n      var date = dateTime.toLocaleDateString('en-US', {\n        month: '2-digit',\n        day: '2-digit',\n        year: '2-digit',\n        timeZone: 'America/New_York'\n      });\n      var day = dateTime.getDay();\n\n      if (!temp.unrestricted) {\n        if (temp.temporary) {\n          if (date > temp.temp_date) {} else {\n              if (localTime < temp.temp_time_range_start) {} else if (localTime > temp.temp_time_range_end) {} else {\n                return true;\n              }\n            }\n        } else if (temp.time_range) {\n            if (date >= temp.time_range_start_date) {\n              if (date <= temp.time_range_end_date) {\n                if (localTime >= temp.time_range_start) {\n                  if (localTime <= temp.time_range_end) {\n                    if (temp.time_range_reoccuring !== null) {\n                      var withinTimeFrame = false;\n                      var daysReoccuring = temp.time_range_reoccuring.match(/.{1,3}/g);\n\n                      for (var i = 0; i < daysReoccuring.length; i++) {\n                        if (day === daysReoccuring[i]) {\n                          withinTimeFrame = true;\n                        }\n                      }\n\n                      if (withinTimeFrame) {\n                        return true;\n                      }\n                    }\n                  }\n                }\n              }\n            } else {}\n          } else {}\n      } else {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this2.getValueForSharedDeviceProperty = function _callee(account, device, property) {\n      var list, temp;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('\\n\\n%j', 2, property);\n              list = _this2.props.device;\n              temp = list.properties[list.properties.indexOf(property)];\n\n              if (!(property.type !== 'action')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/getvalues', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data.message !== null) {\n                  for (var key in data.message) {\n                    if (data.message.hasOwnProperty(key)) {\n                      temp.value = data.message[key];\n\n                      if (temp.type === 'boolean') {\n                        _this2.state.switchVals.push(temp.value);\n                      }\n\n                      if (temp.name === 'Battery' || temp.name === 'State' || temp.name === 'battery' || temp.name === 'lowBattery' || temp.name === 'motion') {\n                        temp.read_only = 1;\n                        console.log(temp);\n                      }\n                    }\n                  }\n                } else throw error('Values empty');\n              }).catch(function (error) {\n                console.error('getValueForSharedDeviceProperty error:', error);\n              }));\n\n            case 6:\n              _this2.setState({\n                device: list\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this2.getCurrentValues = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (_this2.state.switchVals.length !== 0) _this2.setState({\n                switchVals: []\n              });\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all(_this2.props.device.properties.map(function _callee2(property) {\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _regeneratorRuntime.awrap(_this2.getValueForSharedDeviceProperty(_this2.props.device.login_credentials_id, _this2.props.device, property));\n\n                      case 2:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              })));\n\n            case 3:\n              _this2.setState({\n                lastRefreshed: new Date()\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this2.toggleSwitch = function (switchProp) {\n      var switchV = _this2.state.device;\n\n      _this2.useSharedDevice(_this2.props.device.login_credentials_id, _this2.state.device, switchV.properties[switchProp]);\n\n      switchV.properties[switchProp].value = !switchV.properties[switchProp].value;\n\n      _this2.setState({\n        device: switchV\n      });\n    };\n\n    _this2.handleText = function (textInput) {\n      _this2.setState({\n        text: textInput\n      });\n    };\n\n    _this2.useSharedDevice = function _callee4(account, device, property) {\n      var temp, dateTime, localTime, date, day, withinTimeFrame, daysReoccuring, i;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(_this2.setState({\n                loading: true\n              }));\n\n            case 2:\n              temp = property;\n              dateTime = new Date();\n              localTime = dateTime.toLocaleTimeString('en-US', {\n                hour12: false,\n                hour: '2-digit',\n                minute: '2-digit',\n                timeZone: 'America/New_York'\n              });\n              localTime = localTime.substring(0, localTime.length - 3);\n              date = dateTime.toLocaleDateString('en-US', {\n                month: '2-digit',\n                day: '2-digit',\n                year: '2-digit',\n                timeZone: 'America/New_York'\n              });\n              day = dateTime.getDay();\n              _context4.t0 = day;\n              _context4.next = _context4.t0 === 0 ? 11 : _context4.t0 === 1 ? 13 : _context4.t0 === 2 ? 15 : _context4.t0 === 3 ? 17 : _context4.t0 === 4 ? 19 : _context4.t0 === 5 ? 21 : _context4.t0 === 6 ? 23 : 25;\n              break;\n\n            case 11:\n              day = 'Sun';\n              return _context4.abrupt(\"break\", 25);\n\n            case 13:\n              day = 'Mon';\n              return _context4.abrupt(\"break\", 25);\n\n            case 15:\n              day = 'Tue';\n              return _context4.abrupt(\"break\", 25);\n\n            case 17:\n              day = 'Wed';\n              return _context4.abrupt(\"break\", 25);\n\n            case 19:\n              day = 'Thu';\n              return _context4.abrupt(\"break\", 25);\n\n            case 21:\n              day = 'Fri';\n              return _context4.abrupt(\"break\", 25);\n\n            case 23:\n              day = 'Sat';\n              return _context4.abrupt(\"break\", 25);\n\n            case 25:\n              if (temp.unrestricted) {\n                _context4.next = 116;\n                break;\n              }\n\n              if (!temp.temporary) {\n                _context4.next = 56;\n                break;\n              }\n\n              console.log(date, temp.temp_date);\n              console.log(date <= temp.temp_date);\n\n              if (!(date > temp.temp_date)) {\n                _context4.next = 33;\n                break;\n              }\n\n              _this2.showToast('Temporary access for this device has expired');\n\n              _context4.next = 54;\n              break;\n\n            case 33:\n              if (!(localTime < temp.temp_time_range_start)) {\n                _context4.next = 37;\n                break;\n              }\n\n              _this2.showToast('This device is not available at this time (Too early)');\n\n              _context4.next = 54;\n              break;\n\n            case 37:\n              if (!(localTime > temp.temp_time_range_end)) {\n                _context4.next = 41;\n                break;\n              }\n\n              _this2.showToast('The time window for this device has expired (Too late)');\n\n              _context4.next = 54;\n              break;\n\n            case 41:\n              if (!(property.type == 'boolean')) {\n                _context4.next = 46;\n                break;\n              }\n\n              _context4.next = 44;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: !property.value\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                temp.value = !temp.value;\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 44:\n              _context4.next = 54;\n              break;\n\n            case 46:\n              if (!(property.type === 'action')) {\n                _context4.next = 51;\n                break;\n              }\n\n              _context4.next = 49;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: property.name,\n                  text: _this2.state.text\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data.statusCode === 400) {\n                  console.log('%j', 'error, ', data.message);\n                }\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 49:\n              _context4.next = 54;\n              break;\n\n            case 51:\n              if (!(property.type == 'integer')) {\n                _context4.next = 54;\n                break;\n              }\n\n              _context4.next = 54;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: property.value\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                temp.value = !temp.value;\n                console.log(temp);\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 54:\n              _context4.next = 114;\n              break;\n\n            case 56:\n              if (!temp.time_range) {\n                _context4.next = 101;\n                break;\n              }\n\n              if (!(date >= temp.time_range_start_date)) {\n                _context4.next = 97;\n                break;\n              }\n\n              if (!(date <= temp.time_range_end_date)) {\n                _context4.next = 93;\n                break;\n              }\n\n              if (!(localTime >= temp.time_range_start)) {\n                _context4.next = 89;\n                break;\n              }\n\n              if (!(localTime <= temp.time_range_end)) {\n                _context4.next = 85;\n                break;\n              }\n\n              if (!(temp.time_range_reoccuring !== null)) {\n                _context4.next = 83;\n                break;\n              }\n\n              withinTimeFrame = 0;\n              daysReoccuring = temp.time_range_reoccuring.match(/.{1,3}/g);\n\n              for (i = 0; i < daysReoccuring.length; i++) {\n                if (day === daysReoccuring[i]) {\n                  withinTimeFrame = 1;\n                }\n              }\n\n              if (!withinTimeFrame) {\n                _context4.next = 81;\n                break;\n              }\n\n              if (!(property.type == 'boolean')) {\n                _context4.next = 71;\n                break;\n              }\n\n              _context4.next = 69;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: !property.value\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 69:\n              _context4.next = 79;\n              break;\n\n            case 71:\n              if (!(property.type === 'action')) {\n                _context4.next = 76;\n                break;\n              }\n\n              _context4.next = 74;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: property.name,\n                  text: _this2.state.text\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data.statusCode === 400) console.log('%j', 'error, ', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 74:\n              _context4.next = 79;\n              break;\n\n            case 76:\n              if (!(property.type == 'integer')) {\n                _context4.next = 79;\n                break;\n              }\n\n              _context4.next = 79;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: property.value\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                temp.value = !temp.value;\n                console.log(temp);\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 79:\n              _context4.next = 83;\n              break;\n\n            case 81:\n              _this2.showToast(\"Can't use this device on this day\");\n\n              console.log(\"Can't use this device on this day\");\n\n            case 83:\n              _context4.next = 87;\n              break;\n\n            case 85:\n              _this2.showToast('This device is not available at this time (Too late or wrong day)');\n\n              console.log('This device is not available at this time (Too late or wrong day)');\n\n            case 87:\n              _context4.next = 91;\n              break;\n\n            case 89:\n              _this2.showToast('This device is not available at this time (Too early)');\n\n              console.log('This device is not available at this time (Too early)');\n\n            case 91:\n              _context4.next = 95;\n              break;\n\n            case 93:\n              _this2.showToast('Access to this device has expired (Schedule has ended)');\n\n              console.log('Access to this device has expired (Schedule has ended)');\n\n            case 95:\n              _context4.next = 99;\n              break;\n\n            case 97:\n              _this2.showToast(\"This device is not available at this date (Schedule hasn't started yet)\");\n\n              console.log(\"This device is not available at this date (Schedule hasn't started yet)\");\n\n            case 99:\n              _context4.next = 114;\n              break;\n\n            case 101:\n              if (!(property.type == 'boolean')) {\n                _context4.next = 106;\n                break;\n              }\n\n              _context4.next = 104;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: !property.value\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 104:\n              _context4.next = 114;\n              break;\n\n            case 106:\n              if (!(property.type === 'action')) {\n                _context4.next = 111;\n                break;\n              }\n\n              _context4.next = 109;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: property.name,\n                  text: _this2.state.text\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 109:\n              _context4.next = 114;\n              break;\n\n            case 111:\n              if (!(property.type == 'integer')) {\n                _context4.next = 114;\n                break;\n              }\n\n              _context4.next = 114;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: property.value\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                temp.value = !temp.value;\n                console.log(temp);\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 114:\n              _context4.next = 129;\n              break;\n\n            case 116:\n              if (!(property.type == 'boolean')) {\n                _context4.next = 121;\n                break;\n              }\n\n              _context4.next = 119;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: !property.value\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                temp.value = !temp.value;\n                console.log(temp);\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 119:\n              _context4.next = 129;\n              break;\n\n            case 121:\n              if (!(property.type === 'action')) {\n                _context4.next = 126;\n                break;\n              }\n\n              _context4.next = 124;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: property.name,\n                  text: _this2.state.text\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 124:\n              _context4.next = 129;\n              break;\n\n            case 126:\n              if (!(property.type == 'integer')) {\n                _context4.next = 129;\n                break;\n              }\n\n              _context4.next = 129;\n              return _regeneratorRuntime.awrap(fetch('https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + _this2.props.IdToken\n                },\n                body: JSON.stringify({\n                  account: account,\n                  device: device.shared_device_properties_id,\n                  property: property.shared_property_id,\n                  value: property.value\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                temp.value = !temp.value;\n                console.log(temp);\n                if (data.statusCode === 400) console.log('%j', data.message);\n              }).catch(function (error) {\n                console.error('useSharedDevice error:', error);\n              }));\n\n            case 129:\n              _context4.next = 131;\n              return _regeneratorRuntime.awrap(_this2.setState({\n                loading: false\n              }));\n\n            case 131:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this2;\n  }\n\n  _createClass(DeviceCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: [appStyle.container, {\n          marginLeft: -10,\n          marginRight: -10\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [appStyle.card],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 9\n        }\n      }, this.state.loading && React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.onCancel();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: appStyle.modalOverlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 15\n        }\n      })), React.createElement(AppHeaderText, {\n        style: ([style.name], {\n          marginBottom: -10,\n          marginTop: 10\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }\n      }, this.props.owner, \"'s House\"), this.props.device.name.substring(0, 6) === 'Google' && React.createElement(Image, {\n        style: [style.icon, {\n          marginBottom: 0\n        }],\n        source: getDeviceIcon('Google Home Mini'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 13\n        }\n      }), this.props.device.name !== 'Google Home Mini' && React.createElement(Image, {\n        style: [style.icon, {\n          marginBottom: 0\n        }],\n        source: getDeviceIcon(this.props.device.description),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 13\n        }\n      }), React.createElement(AppHeaderText, {\n        style: ([style.name], {\n          marginBottom: 20\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }\n      }, this.props.device.name.slice(0, 25)), this.state.device === null && React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 13\n        }\n      }, React.createElement(AppText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 15\n        }\n      }, \"Loading...\")), this.state.device !== null && this.state.device.properties.map(function (prop, index) {\n        return React.createElement(View, {\n          key: index,\n          style: [appStyle.container, {\n            marginTop: -5\n          }],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: [appStyle.row],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: appStyle.rowLeft,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 23\n          }\n        }, React.createElement(AppText, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 25\n          }\n        }, \" \", prop.name, \" \")), React.createElement(View, {\n          style: appStyle.rowRight,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 23\n          }\n        }, prop.read_only == 1 && React.createElement(AppText, {\n          style: {\n            fontStyle: 'italic',\n            fontSize: 13,\n            top: -2,\n            marginLeft: 40,\n            position: 'absolute',\n            right: 90\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 27\n          }\n        }, \"View Only\"), prop.read_only == 1 && _this3.canAccess(prop) == true && React.createElement(AppText, {\n          style: {\n            fontStyle: 'italic',\n            fontSize: 16,\n            top: -2,\n            marginLeft: 40\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 27\n          }\n        }, prop.value != null ? prop.value.toString() : '...'), prop.type == 'boolean' && prop.read_only == 0 && _this3.canAccess(prop) == true && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'flex-end'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 29\n          }\n        }, React.createElement(Switch, {\n          value: _this3.state.device.properties[index].value,\n          onValueChange: function onValueChange(x) {\n            _this3.toggleSwitch(index);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 31\n          }\n        })), (prop.type == 'float' || prop.type == 'integer') && _this3.canAccess(prop) == true && prop.read_only == 0 && React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 29\n          }\n        }, React.createElement(Slider, {\n          style: {\n            width: 200\n          },\n          step: 1,\n          minimumValue: 0,\n          maximumValue: 100,\n          value: prop.value,\n          onSlidingComplete: function onSlidingComplete(currentVal) {\n            var temp = _this3.state.device;\n            var temp2 = temp.properties[temp.properties.indexOf(prop)];\n            temp2.value = currentVal;\n\n            _this3.useSharedDevice(_this3.props.device.login_credentials_id, _this3.state.device, temp2);\n\n            _this3.setState({\n              device: temp\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 31\n          }\n        })), prop.type == 'action' && prop.name != 'speak' && _this3.canAccess(prop) == true && prop.read_only == 0 && React.createElement(View, {\n          style: {\n            bottom: 5\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this3.useSharedDevice(_this3.props.device.login_credentials_id, _this3.state.device, prop);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 33\n          }\n        }, \"\\u26AB\"))), prop.type == 'action' && prop.name == 'speak' && _this3.canAccess(prop) == true && prop.read_only == 0 && React.createElement(View, {\n          style: [appStyle.row, {\n            bottom: 5,\n            paddingLeft: 5\n          }],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 29\n          }\n        }, React.createElement(TextInput, {\n          style: style.input,\n          underlineColorAndroid: \"transparent\",\n          placeholder: \"Text to Speech\",\n          autoCapitalize: \"none\",\n          onChangeText: _this3.handleText,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 31\n          }\n        }), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this3.useSharedDevice(_this3.props.device.login_credentials_id, _this3.state.device, prop);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            marginLeft: -15\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 33\n          }\n        }, \"\\u26AB\")))))), React.createElement(View, {\n          style: [style.lineContainer, {\n            marginTop: 10\n          }],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 19\n          }\n        }));\n      }), this.state.device !== null && this.state.device.properties.length > 0 && React.createElement(View, {\n        style: [appStyle.container, {\n          marginLeft: 10,\n          marginBottom: 0,\n          marginTop: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 15\n        }\n      }, React.createElement(RenderAccess, {\n        curVal: this.state.device.properties[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 17\n        }\n      })), this.state.device !== null && this.state.lastRefreshed !== null && React.createElement(View, {\n        style: [appStyle.row, {\n          height: 20,\n          paddingTop: 5\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: appStyle.rowLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 15\n        }\n      }, React.createElement(AppText, {\n        style: {\n          fontSize: 14,\n          marginLeft: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 17\n        }\n      }, \"Last Refreshed:\", ' ', Moment(this.state.lastRefreshed).format('MM/DD @ h:mm:ss a'))), React.createElement(View, {\n        style: [appStyle.rowRight, {\n          marginRight: 15,\n          top: 7\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this3.getCurrentValues();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 17\n        }\n      }, React.createElement(AppHeaderText, {\n        style: {\n          fontSize: 28,\n          color: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 19\n        }\n      }, \"\\u21BA\"))))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCurrentValues();\n    }\n  }]);\n\n  return DeviceCard;\n}(Component);\n\nvar style = StyleSheet.create({\n  name: {\n    fontSize: 24,\n    height: 30\n  },\n  icon: {\n    marginTop: 10,\n    height: 100,\n    width: 100\n  },\n  lineContainer: {\n    flex: 1,\n    backgroundColor: '#333333',\n    height: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'stretch',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 40\n  },\n  input: {\n    alignSelf: 'center',\n    borderRadius: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 10,\n    shadowRadius: 20.41,\n    borderWidth: 1.2,\n    borderColor: '#a8a8a8',\n    elevation: 3,\n    backgroundColor: '#fcfcfc',\n    maxHeight: 40,\n    padding: 0,\n    width: 170,\n    paddingRight: 0,\n    paddingLeft: 10,\n    marginRight: 22,\n    marginLeft: 1\n  }\n});\nexport default DeviceCard;","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/real-SD/MiSu-v2/components/cards/DeviceCard.js"],"names":["React","Component","getDeviceIcon","Slider","AppHeaderText","AppText","appStyle","Moment","RenderAccess","props","formatDate","time","toString","match","length","slice","join","firstProp","curVal","firstPropTimeRangeReoccuringStr","time_range_reoccuring","tempCount","i","dayCut","substring","row","marginLeft","marginTop","unrestricted","fontSize","fontStyle","time_range","top","rowRight","right","time_range_start_date","time_range_start","time_range_end_date","time_range_end","temporary","temp_date","temp_time_range_end","DeviceCard","state","owned","switchVals","minVal","maxVal","device","slider","text","loading","showToast","ToastAndroid","show","LONG","canAccess","temp","dateTime","Date","localTime","toLocaleTimeString","hour12","hour","minute","timeZone","date","toLocaleDateString","month","day","year","getDay","temp_time_range_start","withinTimeFrame","daysReoccuring","getValueForSharedDeviceProperty","account","property","console","log","list","properties","indexOf","type","fetch","method","headers","Authorization","IdToken","body","JSON","stringify","shared_device_properties_id","shared_property_id","then","response","json","data","message","key","hasOwnProperty","value","push","name","read_only","error","catch","setState","getCurrentValues","Promise","all","map","login_credentials_id","lastRefreshed","toggleSwitch","switchProp","switchV","useSharedDevice","handleText","textInput","statusCode","container","marginRight","card","onCancel","modalOverlay","style","marginBottom","owner","icon","description","prop","index","flex","flexDirection","rowLeft","position","justifyContent","x","width","currentVal","temp2","bottom","paddingLeft","input","lineContainer","height","paddingTop","format","color","StyleSheet","create","backgroundColor","alignItems","alignSelf","left","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderWidth","borderColor","elevation","maxHeight","padding","paddingRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport getDeviceIcon from '../app/DeviceIcons';\nimport {\n  View,\n  Image,\n  StyleSheet,\n  Switch,\n  Slider,\n  TouchableOpacity,\n  Text,\n  TextInput,\n  ToastAndroid,\n} from 'react-native';\nimport AppHeaderText from '../app/AppHeaderText';\nimport AppText from '../app/AppText';\nimport appStyle from '../../styles/AppStyle';\nimport Moment from 'moment';\n\n// Render each properties access values\nconst RenderAccess = (props) => {\n  function formatDate(time) {\n    // Check correct time format and split into components\n    time = time\n      .toString()\n      .match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n    if (time.length > 1) {\n      // If time format correct\n      time = time.slice(1); // Remove full string match value\n      time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n      time[0] = +time[0] % 12 || 12; // Adjust hours\n    }\n    return time.join(''); // return adjusted time or original string\n  }\n\n  const firstProp = props.curVal;\n  var firstPropTimeRangeReoccuringStr = '';\n  if (\n    firstProp.time_range_reoccuring == '' ||\n    firstProp.time_range_reoccuring == null\n  )\n    firstPropTimeRangeReoccuringStr = 'Everyday  ';\n  else {\n    var tempCount = 0;\n    for (var i = 0; i < firstProp.time_range_reoccuring.length + 1; i++) {\n      // Skip to every three letters to support the MonThuSat example\n      if (tempCount >= 3 && i <= firstProp.time_range_reoccuring.length) {\n        tempCount = 0;\n        var dayCut = firstProp.time_range_reoccuring.substring(i - 3, i);\n        // Check if the time range is thursday for special case of using R to signify it\n        // if(dayCut == \"Thu\")\n        // {\n        //     firstPropTimeRangeReoccuringStr += \"R, \";\n        // }\n        // // Check if the time range is sunday for special case of using U to signify it\n        // else if(dayCut == \"Sun\")\n        // {\n        //     firstPropTimeRangeReoccuringStr += \"U, \";\n        // }\n        // else\n        //     firstPropTimeRangeReoccuringStr += dayCut[0] + \", \";\n        firstPropTimeRangeReoccuringStr += dayCut + ', ';\n      }\n      tempCount++;\n    }\n  }\n  firstPropTimeRangeReoccuringStr = firstPropTimeRangeReoccuringStr.substring(\n    0,\n    firstPropTimeRangeReoccuringStr.length - 2\n  );\n\n  return (\n    <View style={[appStyle.row, { marginLeft: -5, marginTop: 2 }]}>\n      {/* Display second row detailing the access*/}\n      {firstProp.unrestricted == 1 && (\n        <View>\n          <AppText style={{ fontSize: 14, fontStyle: 'italic', marginTop: -4 }}>\n            * Unrestricted Access\n          </AppText>\n        </View>\n      )}\n      {firstProp.time_range == 1 && (\n        <View style={[{ marginTop: -15, top: 0 }]}>\n          <View style={[appStyle.rowRight, { right: 10, top: 32 }]}>\n            <AppText\n              style={{ fontSize: 12, fontStyle: 'italic', marginTop: -4 }}\n            >\n              {firstPropTimeRangeReoccuringStr}\n            </AppText>\n          </View>\n          <View style={appStyle.row}>\n            <AppText\n              style={{ fontSize: 14, fontStyle: 'italic', marginTop: -4 }}\n            >\n              Scheduled {firstProp.time_range_start_date.slice(0, -3)} @{' '}\n              {formatDate(firstProp.time_range_start)}\n            </AppText>\n            <AppText\n              style={{ fontSize: 14, fontStyle: 'italic', marginTop: -4 }}\n            >\n              {' '}\n              to {firstProp.time_range_end_date.slice(0, -3)} @{' '}\n              {formatDate(firstProp.time_range_end)}\n            </AppText>\n          </View>\n        </View>\n      )}\n      {firstProp.temporary == 1 && (\n        <View>\n          <AppText style={{ fontSize: 14, fontStyle: 'italic', marginTop: -4 }}>\n            Temporary until {firstProp.temp_date.slice(0, -3)},{' '}\n            {formatDate(firstProp.temp_time_range_end)}\n          </AppText>\n        </View>\n      )}\n    </View>\n    // <View style={{flex:1}}>\n    //   {/* Render Property Access Info */}\n    //   {\n    //   <Text>\n    //     {(() => {\n    //       if (firstProp.unrestricted) {\n    //         return <Text style={{fontStyle: \"italic\"}}>Unrestricted</Text>;\n    //       }\n    //       else if (firstProp.temporary)\n    //       {\n    //         return firstProp.temp_time_range_start + \"-\" + firstProp.temp_time_range_end + \" \" + firstProp.temp_date;\n    //       }\n    //       else if (firstProp.time_range)\n    //       {\n    //         return firstProp.time_range_start + \"-\" + firstProp.time_range_end + \" \" + firstProp.time_range_reoccuring;\n    //       }\n    //       })()\n    //     }\n    //   </Text>\n    //   }\n    // </View>\n  );\n};\n\nclass DeviceCard extends Component {\n  state = {\n    owned: true,\n    switchVals: [],\n    minVal: 0,\n    maxVal: 100,\n    device: null,\n    slider: 0,\n    text: '',\n    loading: false,\n  };\n\n  showToast = (text) => {\n    ToastAndroid.show(text, ToastAndroid.LONG);\n  };\n\n  canAccess = (temp) => {\n    var dateTime = new Date();\n    var localTime = dateTime.toLocaleTimeString('en-US', {\n      hour12: false,\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZone: 'America/New_York',\n    });\n    localTime = localTime.substring(0, localTime.length - 3);\n    // MM/DD/YY\n    var date = dateTime.toLocaleDateString('en-US', {\n      month: '2-digit',\n      day: '2-digit',\n      year: '2-digit',\n      timeZone: 'America/New_York',\n    });\n    // Not sure why but dateTime.toLocaleDateString('en-US', {weekday:'short'}); kept returning the full date and not the day, so switch statement is the work around\n    var day = dateTime.getDay();\n\n    if (!temp.unrestricted) {\n      // Temporary Rules\n      if (temp.temporary) {\n        // Check if it is still the same day\n        if (date > temp.temp_date) {\n        }\n        // Check if within the time rules\n        else {\n          if (localTime < temp.temp_time_range_start) {\n          } else if (localTime > temp.temp_time_range_end) {\n          } else {\n            return true;\n          }\n        }\n      }\n      // Schedule based rules\n      else if (temp.time_range) {\n        // Check if within the schedule start date\n        if (date >= temp.time_range_start_date) {\n          // Check if within the schedule end date\n          if (date <= temp.time_range_end_date) {\n            // Check if we are within the time range window\n            if (localTime >= temp.time_range_start) {\n              if (localTime <= temp.time_range_end) {\n                // Check if this rule is operating on the correct day(s)\n                if (temp.time_range_reoccuring !== null) {\n                  var withinTimeFrame = false;\n                  var daysReoccuring = temp.time_range_reoccuring.match(\n                    /.{1,3}/g\n                  );\n                  for (var i = 0; i < daysReoccuring.length; i++) {\n                    if (day === daysReoccuring[i]) {\n                      withinTimeFrame = true;\n                    }\n                  }\n\n                  if (withinTimeFrame) {\n                    return true;\n                  }\n                }\n              }\n            }\n          }\n        } else {\n        }\n      } else {\n      }\n    } else {\n      return true;\n    }\n    return false;\n  };\n\n  getValueForSharedDeviceProperty = async (account, device, property) => {\n    console.log('\\n\\n%j', 2, property);\n    var list = this.props.device;\n    var temp = list.properties[list.properties.indexOf(property)];\n    if (property.type !== 'action') {\n      await fetch(\n        'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/getvalues',\n        {\n          method: 'POST',\n          headers: {\n            Authorization: 'Bearer ' + this.props.IdToken,\n          },\n          body: JSON.stringify({\n            account: account,\n            device: device.shared_device_properties_id,\n            property: property.shared_property_id,\n          }),\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.message !== null) {\n            for (var key in data.message) {\n              if (data.message.hasOwnProperty(key)) {\n                temp.value = data.message[key];\n\n                if (temp.type === 'boolean') {\n                  this.state.switchVals.push(temp.value);\n                }\n                if (\n                  temp.name === 'Battery' ||\n                  temp.name === 'State' ||\n                  temp.name === 'battery' ||\n                  temp.name === 'lowBattery' ||\n                  temp.name === 'motion'\n                ) {\n                  temp.read_only = 1;\n                  console.log(temp);\n                }\n              }\n            }\n          } else throw error('Values empty');\n        })\n        .catch((error) => {\n          console.error('getValueForSharedDeviceProperty error:', error);\n        });\n    }\n    this.setState({ device: list });\n  };\n\n  getCurrentValues = async () => {\n    if (this.state.switchVals.length !== 0) this.setState({ switchVals: [] });\n    await Promise.all(\n      this.props.device.properties.map(async (property) => {\n        await this.getValueForSharedDeviceProperty(\n          this.props.device.login_credentials_id,\n          this.props.device,\n          property\n        );\n      })\n    );\n\n    this.setState({ lastRefreshed: new Date() });\n  };\n\n  toggleSwitch = (switchProp) => {\n    var switchV = this.state.device;\n    this.useSharedDevice(\n      this.props.device.login_credentials_id,\n      this.state.device,\n      switchV.properties[switchProp]\n    );\n    switchV.properties[switchProp].value = !switchV.properties[switchProp]\n      .value;\n    this.setState({\n      device: switchV,\n    });\n  };\n  handleText = (textInput) => {\n    this.setState({ text: textInput });\n  };\n\n  // Sends a command to a hub\n  useSharedDevice = async (account, device, property) => {\n    // Tell the screen we're loading\n    await this.setState({ loading: true });\n\n    // var list = this.state.device;\n    var temp = property;\n    // console.log(account);\n\n    var dateTime = new Date();\n    var localTime = dateTime.toLocaleTimeString('en-US', {\n      hour12: false,\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZone: 'America/New_York',\n    });\n    localTime = localTime.substring(0, localTime.length - 3);\n    // MM/DD/YY\n    var date = dateTime.toLocaleDateString('en-US', {\n      month: '2-digit',\n      day: '2-digit',\n      year: '2-digit',\n      timeZone: 'America/New_York',\n    });\n    // Not sure why but dateTime.toLocaleDateString('en-US', {weekday:'short'}); kept returning the full date and not the day, so switch statement is the work around\n    var day = dateTime.getDay();\n    switch (day) {\n      case 0:\n        day = 'Sun';\n        break;\n      case 1:\n        day = 'Mon';\n        break;\n      case 2:\n        day = 'Tue';\n        break;\n      case 3:\n        day = 'Wed';\n        break;\n      case 4:\n        day = 'Thu';\n        break;\n      case 5:\n        day = 'Fri';\n        break;\n      case 6:\n        day = 'Sat';\n        break;\n    }\n    // Check for rules\n    if (!temp.unrestricted) {\n      // Temporary Rules\n      if (temp.temporary) {\n        console.log(date, temp.temp_date);\n        console.log(date <= temp.temp_date);\n        // Check if it is still the same day\n        if (date > temp.temp_date) {\n          this.showToast('Temporary access for this device has expired');\n        }\n        // Check if within the time rules\n        else {\n          if (localTime < temp.temp_time_range_start) {\n            this.showToast(\n              'This device is not available at this time (Too early)'\n            );\n          } else if (localTime > temp.temp_time_range_end) {\n            this.showToast(\n              'The time window for this device has expired (Too late)'\n            );\n          } else {\n            if (property.type == 'boolean')\n              await fetch(\n                'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n                {\n                  method: 'POST',\n                  headers: {\n                    Authorization: 'Bearer ' + this.props.IdToken,\n                  },\n                  body: JSON.stringify({\n                    account: account,\n                    device: device.shared_device_properties_id,\n                    property: property.shared_property_id,\n                    value: !property.value,\n                  }),\n                }\n              )\n                .then((response) => response.json())\n                .then((data) => {\n                  temp.value = !temp.value;\n                  if (data.statusCode === 400) console.log('%j', data.message);\n\n                  // this.getValueForSharedDeviceProperty(account, device, property);\n                })\n                .catch((error) => {\n                  console.error('useSharedDevice error:', error);\n                });\n            else if (property.type === 'action') {\n              await fetch(\n                'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n                {\n                  method: 'POST',\n                  headers: {\n                    Authorization: 'Bearer ' + this.props.IdToken,\n                  },\n                  body: JSON.stringify({\n                    account: account,\n                    device: device.shared_device_properties_id,\n                    property: property.shared_property_id,\n                    value: property.name,\n                    text: this.state.text,\n                  }),\n                }\n              )\n                .then((response) => response.json())\n                .then((data) => {\n                  if (data.statusCode === 400) {\n                    console.log('%j', 'error, ', data.message);\n                  }\n                })\n                .catch((error) => {\n                  console.error('useSharedDevice error:', error);\n                });\n            } else if (property.type == 'integer') {\n              await fetch(\n                'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n                {\n                  method: 'POST',\n                  headers: {\n                    Authorization: 'Bearer ' + this.props.IdToken,\n                  },\n                  body: JSON.stringify({\n                    account: account,\n                    device: device.shared_device_properties_id,\n                    property: property.shared_property_id,\n                    value: property.value,\n                  }),\n                }\n              )\n                .then((response) => response.json())\n\n                .then((data) => {\n                  temp.value = !temp.value;\n                  console.log(temp);\n                  if (data.statusCode === 400) console.log('%j', data.message);\n\n                  // this.getValueForSharedDeviceProperty(account, device, property);\n                })\n                .catch((error) => {\n                  console.error('useSharedDevice error:', error);\n                });\n            }\n          }\n        }\n      }\n      // Schedule based rules\n      else if (temp.time_range) {\n        // Check if within the schedule start date\n        if (date >= temp.time_range_start_date) {\n          // Check if within the schedule end date\n          if (date <= temp.time_range_end_date) {\n            // Check if we are within the time range window\n            if (localTime >= temp.time_range_start) {\n              if (localTime <= temp.time_range_end) {\n                // Check if this rule is operating on the correct day(s)\n                if (temp.time_range_reoccuring !== null) {\n                  var withinTimeFrame = 0;\n                  var daysReoccuring = temp.time_range_reoccuring.match(\n                    /.{1,3}/g\n                  );\n                  for (var i = 0; i < daysReoccuring.length; i++) {\n                    if (day === daysReoccuring[i]) {\n                      withinTimeFrame = 1;\n                    }\n                  }\n\n                  if (withinTimeFrame) {\n                    if (property.type == 'boolean')\n                      await fetch(\n                        'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n                        {\n                          method: 'POST',\n                          headers: {\n                            Authorization: 'Bearer ' + this.props.IdToken,\n                          },\n                          body: JSON.stringify({\n                            account: account,\n                            device: device.shared_device_properties_id,\n                            property: property.shared_property_id,\n                            value: !property.value,\n                          }),\n                        }\n                      )\n                        .then((response) => response.json())\n                        .then((data) => {\n                          if (data.statusCode === 400)\n                            console.log('%j', data.message);\n\n                          // this.getValueForSharedDeviceProperty(account, device, property);\n                        })\n                        .catch((error) => {\n                          console.error('useSharedDevice error:', error);\n                        });\n                    else if (property.type === 'action') {\n                      await fetch(\n                        'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n                        {\n                          method: 'POST',\n                          headers: {\n                            Authorization: 'Bearer ' + this.props.IdToken,\n                          },\n                          body: JSON.stringify({\n                            account: account,\n                            device: device.shared_device_properties_id,\n                            property: property.shared_property_id,\n                            value: property.name,\n                            text: this.state.text,\n                          }),\n                        }\n                      )\n                        .then((response) => response.json())\n                        .then((data) => {\n                          if (data.statusCode === 400)\n                            console.log('%j', 'error, ', data.message);\n                        })\n                        .catch((error) => {\n                          console.error('useSharedDevice error:', error);\n                        });\n                    } else if (property.type == 'integer') {\n                      await fetch(\n                        'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n                        {\n                          method: 'POST',\n                          headers: {\n                            Authorization: 'Bearer ' + this.props.IdToken,\n                          },\n                          body: JSON.stringify({\n                            account: account,\n                            device: device.shared_device_properties_id,\n                            property: property.shared_property_id,\n                            value: property.value,\n                          }),\n                        }\n                      )\n                        .then((response) => response.json())\n\n                        .then((data) => {\n                          temp.value = !temp.value;\n                          console.log(temp);\n                          if (data.statusCode === 400)\n                            console.log('%j', data.message);\n\n                          // this.getValueForSharedDeviceProperty(account, device, property);\n                        })\n                        .catch((error) => {\n                          console.error('useSharedDevice error:', error);\n                        });\n                    }\n                  } else {\n                    this.showToast(\"Can't use this device on this day\");\n                    console.log(\"Can't use this device on this day\");\n                  }\n                }\n              } else {\n                this.showToast(\n                  'This device is not available at this time (Too late or wrong day)'\n                );\n                console.log(\n                  'This device is not available at this time (Too late or wrong day)'\n                );\n              }\n            } else {\n              this.showToast(\n                'This device is not available at this time (Too early)'\n              );\n              console.log(\n                'This device is not available at this time (Too early)'\n              );\n            }\n          } else {\n            this.showToast(\n              'Access to this device has expired (Schedule has ended)'\n            );\n            console.log(\n              'Access to this device has expired (Schedule has ended)'\n            );\n          }\n        } else {\n          this.showToast(\n            \"This device is not available at this date (Schedule hasn't started yet)\"\n          );\n          console.log(\n            \"This device is not available at this date (Schedule hasn't started yet)\"\n          );\n        }\n      } else {\n        if (property.type == 'boolean')\n          await fetch(\n            'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n            {\n              method: 'POST',\n              headers: {\n                Authorization: 'Bearer ' + this.props.IdToken,\n              },\n              body: JSON.stringify({\n                account: account,\n                device: device.shared_device_properties_id,\n                property: property.shared_property_id,\n                value: !property.value,\n              }),\n            }\n          )\n            .then((response) => response.json())\n            .then((data) => {\n              if (data.statusCode === 400) console.log('%j', data.message);\n\n              // this.getValueForSharedDeviceProperty(account, device, property);\n            })\n            .catch((error) => {\n              console.error('useSharedDevice error:', error);\n            });\n        else if (property.type === 'action') {\n          await fetch(\n            'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n            {\n              method: 'POST',\n              headers: {\n                Authorization: 'Bearer ' + this.props.IdToken,\n              },\n              body: JSON.stringify({\n                account: account,\n                device: device.shared_device_properties_id,\n                property: property.shared_property_id,\n                value: property.name,\n                text: this.state.text,\n              }),\n            }\n          )\n            .then((response) => response.json())\n            .then((data) => {\n              if (data.statusCode === 400) console.log('%j', data.message);\n            })\n            .catch((error) => {\n              console.error('useSharedDevice error:', error);\n            });\n        } else if (property.type == 'integer') {\n          await fetch(\n            'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n            {\n              method: 'POST',\n              headers: {\n                Authorization: 'Bearer ' + this.props.IdToken,\n              },\n              body: JSON.stringify({\n                account: account,\n                device: device.shared_device_properties_id,\n                property: property.shared_property_id,\n                value: property.value,\n              }),\n            }\n          )\n            .then((response) => response.json())\n\n            .then((data) => {\n              temp.value = !temp.value;\n              console.log(temp);\n              if (data.statusCode === 400) console.log('%j', data.message);\n\n              // this.getValueForSharedDeviceProperty(account, device, property);\n            })\n            .catch((error) => {\n              console.error('useSharedDevice error:', error);\n            });\n        }\n      }\n    } else {\n      if (property.type == 'boolean')\n        await fetch(\n          'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n          {\n            method: 'POST',\n            headers: {\n              Authorization: 'Bearer ' + this.props.IdToken,\n            },\n            body: JSON.stringify({\n              account: account,\n              device: device.shared_device_properties_id,\n              property: property.shared_property_id,\n              value: !property.value,\n            }),\n          }\n        )\n          .then((response) => response.json())\n\n          .then((data) => {\n            temp.value = !temp.value;\n            console.log(temp);\n            if (data.statusCode === 400) console.log('%j', data.message);\n\n            // this.getValueForSharedDeviceProperty(account, device, property);\n          })\n          .catch((error) => {\n            console.error('useSharedDevice error:', error);\n          });\n      else if (property.type === 'action') {\n        await fetch(\n          'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n          {\n            method: 'POST',\n            headers: {\n              Authorization: 'Bearer ' + this.props.IdToken,\n            },\n            body: JSON.stringify({\n              account: account,\n              device: device.shared_device_properties_id,\n              property: property.shared_property_id,\n              value: property.name,\n              text: this.state.text,\n            }),\n          }\n        )\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.statusCode === 400) console.log('%j', data.message);\n          })\n          .catch((error) => {\n            console.error('useSharedDevice error:', error);\n          });\n      } else if (property.type == 'integer') {\n        await fetch(\n          'https://c8zta83ta5.execute-api.us-east-1.amazonaws.com/test/usedevice',\n          {\n            method: 'POST',\n            headers: {\n              Authorization: 'Bearer ' + this.props.IdToken,\n            },\n            body: JSON.stringify({\n              account: account,\n              device: device.shared_device_properties_id,\n              property: property.shared_property_id,\n              value: property.value,\n            }),\n          }\n        )\n          .then((response) => response.json())\n\n          .then((data) => {\n            temp.value = !temp.value;\n            console.log(temp);\n            if (data.statusCode === 400) console.log('%j', data.message);\n\n            // this.getValueForSharedDeviceProperty(account, device, property);\n          })\n          .catch((error) => {\n            console.error('useSharedDevice error:', error);\n          });\n      }\n    }\n    await this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <View style={[appStyle.container, { marginLeft: -10, marginRight: -10 }]}>\n        <View style={[appStyle.card]}>\n          {this.state.loading && (\n            /* Fixes crashing/logging out*/\n            <TouchableOpacity onPress={() => this.props.onCancel()}>\n              <View style={appStyle.modalOverlay} />\n            </TouchableOpacity>\n          )}\n\n          {/* Render the owners name */}\n          <AppHeaderText\n            style={([style.name], { marginBottom: -10, marginTop: 10 })}\n          >\n            {this.props.owner}'s House\n          </AppHeaderText>\n\n          {/* Render the device icon */}\n          {this.props.device.name.substring(0, 6) === 'Google' && (\n            <Image\n              style={[style.icon, { marginBottom: 0 }]}\n              source={getDeviceIcon('Google Home Mini')}\n            />\n          )}\n\n          {this.props.device.name !== 'Google Home Mini' && (\n            <Image\n              style={[style.icon, { marginBottom: 0 }]}\n              source={getDeviceIcon(this.props.device.description)}\n            />\n          )}\n\n          {/* Render the device name */}\n          <AppHeaderText style={([style.name], { marginBottom: 20 })}>\n            {this.props.device.name.slice(0, 25)}\n          </AppHeaderText>\n\n          {/* Render loading bar */}\n          {this.state.device === null && (\n            <View>\n              <AppText>Loading...</AppText>\n            </View>\n          )}\n\n          {/* Render each property */}\n          {this.state.device !== null &&\n            this.state.device.properties.map((prop, index) => {\n              return (\n                <View\n                  key={index}\n                  style={[appStyle.container, { marginTop: -5 }]}\n                >\n                  <View style={[appStyle.row]}>\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\n                      {/* Render Property Left Side  */}\n                      <View style={appStyle.rowLeft}>\n                        {/* Render Property Name */}\n                        <AppText> {prop.name} </AppText>\n                      </View>\n\n                      {/* Render Property Right Side */}\n                      <View style={appStyle.rowRight}>\n                        {/* Render Property Readonly */}\n                        {prop.read_only == 1 && (\n                          <AppText\n                            style={{\n                              fontStyle: 'italic',\n                              fontSize: 13,\n                              top: -2,\n                              marginLeft: 40,\n                              position: 'absolute',\n                              right: 90,\n                            }}\n                          >\n                            View Only\n                          </AppText>\n                        )}\n                        {/* Render Property Readonly */}\n                        {prop.read_only == 1 && this.canAccess(prop) == true && (\n                          <AppText\n                            style={{\n                              fontStyle: 'italic',\n                              fontSize: 16,\n                              top: -2,\n                              marginLeft: 40,\n                            }}\n                          >\n                            {prop.value != null ? prop.value.toString() : '...'}\n                          </AppText>\n                        )}\n\n                        {/* Render Switch for Boolean */}\n                        {prop.type == 'boolean' &&\n                          prop.read_only == 0 &&\n                          this.canAccess(prop) == true && (\n                            <View\n                              style={{\n                                flex: 1,\n                                flexDirection: 'row',\n                                justifyContent: 'flex-end',\n                              }}\n                            >\n                              <Switch\n                                value={\n                                  this.state.device.properties[index].value\n                                }\n                                onValueChange={(x) => {\n                                  this.toggleSwitch(index);\n                                }}\n                              />\n                            </View>\n                          )}\n\n                        {/* Render Slider for float and integers */}\n                        {(prop.type == 'float' || prop.type == 'integer') &&\n                          this.canAccess(prop) == true &&\n                          prop.read_only == 0 && (\n                            <View>\n                              <Slider\n                                style={{ width: 200 }}\n                                step={1}\n                                minimumValue={0}\n                                maximumValue={100}\n                                value={prop.value}\n                                onSlidingComplete={(currentVal) => {\n                                  var temp = this.state.device;\n                                  var temp2 =\n                                    temp.properties[\n                                      temp.properties.indexOf(prop)\n                                    ];\n                                  temp2.value = currentVal;\n                                  this.useSharedDevice(\n                                    this.props.device.login_credentials_id,\n                                    this.state.device,\n                                    temp2\n                                  );\n                                  this.setState({ device: temp });\n                                }}\n                              />\n                            </View>\n                          )}\n                        {/* Render Buttons for actions */}\n                        {prop.type == 'action' &&\n                          prop.name != 'speak' &&\n                          this.canAccess(prop) == true &&\n                          prop.read_only == 0 && (\n                            <View style={{ bottom: 5 }}>\n                              <TouchableOpacity\n                                onPress={() =>\n                                  this.useSharedDevice(\n                                    this.props.device.login_credentials_id,\n                                    this.state.device,\n                                    prop\n                                  )\n                                }\n                              >\n                                <Text style={{ fontSize: 20 }}>&#9899;</Text>\n                              </TouchableOpacity>\n                            </View>\n                          )}\n                        {/* Render Buttons and text input for Google Home Mini */}\n                        {prop.type == 'action' &&\n                          prop.name == 'speak' &&\n                          this.canAccess(prop) == true &&\n                          prop.read_only == 0 && (\n                            <View\n                              style={[\n                                appStyle.row,\n                                { bottom: 5, paddingLeft: 5 },\n                              ]}\n                            >\n                              <TextInput\n                                style={style.input}\n                                underlineColorAndroid=\"transparent\"\n                                placeholder=\"Text to Speech\"\n                                autoCapitalize=\"none\"\n                                onChangeText={this.handleText}\n                              />\n                              <TouchableOpacity\n                                onPress={() =>\n                                  this.useSharedDevice(\n                                    this.props.device.login_credentials_id,\n                                    this.state.device,\n                                    prop\n                                  )\n                                }\n                              >\n                                <Text style={{ fontSize: 20, marginLeft: -15 }}>\n                                  &#9899;\n                                </Text>\n                              </TouchableOpacity>\n                            </View>\n                          )}\n                      </View>\n                    </View>\n                  </View>\n                  <View style={[style.lineContainer, { marginTop: 10 }]} />\n                </View>\n              );\n            })}\n\n          {/* Render Property Info */}\n          {this.state.device !== null &&\n            this.state.device.properties.length > 0 && (\n              <View\n                style={[\n                  appStyle.container,\n                  { marginLeft: 10, marginBottom: 0, marginTop: 0 },\n                ]}\n              >\n                <RenderAccess curVal={this.state.device.properties[0]} />\n              </View>\n            )}\n\n          {/* Render refresh access */}\n          {this.state.device !== null && this.state.lastRefreshed !== null && (\n            <View style={[appStyle.row, { height: 20, paddingTop: 5 }]}>\n              <View style={appStyle.rowLeft}>\n                <AppText style={{ fontSize: 14, marginLeft: 15 }}>\n                  Last Refreshed:{' '}\n                  {Moment(this.state.lastRefreshed).format('MM/DD @ h:mm:ss a')}\n                </AppText>\n              </View>\n              <View style={[appStyle.rowRight, { marginRight: 15, top: 7 }]}>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.getCurrentValues();\n                  }}\n                >\n                  <AppHeaderText style={{ fontSize: 28, color: 'blue' }}>\n                    ↺\n                  </AppHeaderText>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n\n  componentDidMount() {\n    this.getCurrentValues();\n  }\n}\n\nconst style = StyleSheet.create({\n  name: {\n    fontSize: 24,\n    height: 30,\n  },\n  icon: {\n    marginTop: 10,\n    height: 100,\n    width: 100,\n  },\n  lineContainer: {\n    flex: 1,\n    backgroundColor: '#333333',\n    height: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'stretch',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 40,\n  },\n  input: {\n    alignSelf: 'center',\n\n    borderRadius: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 10,\n    shadowRadius: 20.41,\n    borderWidth: 1.2,\n    borderColor: '#a8a8a8',\n    elevation: 3,\n    backgroundColor: '#fcfcfc',\n    maxHeight: 40,\n    padding: 0,\n    width: 170,\n    paddingRight: 0,\n    paddingLeft: 10,\n    marginRight: 22,\n    marginLeft: 1,\n  },\n});\n\nexport default DeviceCard;\n"]},"metadata":{},"sourceType":"module"}